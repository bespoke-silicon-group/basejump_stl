import random
import sys

class TraceGen:

  def print_header(self):
    print("#### generated by trace_gen.py ####")

  def tagst(self, addr, data):
    packet = "0001_"
    packet += "10000_"                      # tagst
    packet += format(addr, "032b") + "_"    # addr
    packet += format(0, "032b")             # data
    print(packet)

  def load_word(self, addr):
    packet = "0001_"
    packet += "00010_"                      # lw
    packet += format(addr, "032b") + "_"    # addr
    packet += format(0, "032b")             # data
    print(packet)

  def store_word(self, addr, data):
    packet = "0001_"
    packet += "01010_"                      # sw
    packet += format(addr, "032b") + "_"    # addr
    packet += format(data, "032b")          # data
    print(packet)

  def wait_one_cycle(self):
    packet = "0000_"
    packet += "00000_"
    packet += format(0, "032b") +  "_"
    packet += format(0, "032b")
    print(packet)

  def wait(self, cycle):
    packet = "0110_"
    packet += "00000_"
    packet += format(0, "032b") +  "_"
    packet += format(cycle, "032b")
    print(packet)
    packet = "0101_"
    packet += "00000_"
    packet += format(0, "032b") +  "_"
    packet += format(0, "032b")
    print(packet)


if __name__ == "__main__":
  num_instr_p = int(sys.argv[1])  
  seed_p = int(sys.argv[2])
  print("# seed_p = " + str(seed_p))

  random.seed(seed_p)

  tg = TraceGen()
  tg.print_header()
  for i in range(32):
    tg.tagst(addr=(i <<5), data=0)

  store_data = 1
  for i in range(num_instr_p):
    load_not_store = random.randint(0,1)
    tag = random.randint(0,3) << 9
    word_offset = random.randint(0,7) << 2
    index = random.randint(0,7) << 5
    addr = tag + index + word_offset
    if (load_not_store):
      tg.load_word(addr=addr)
    else:
      tg.store_word(addr=addr,data=store_data)
      store_data += 1
    delay = random.randint(0,15)
    if (delay == 0):
      continue
    elif (delay == 1):
      tg.wait_one_cycle()
    else:
      tg.wait(cycle=delay)
