// auto-generated by bsg_ascii_to_rom.py from /home/xusine/Desktop/BSGProject/basejump_stl/bsg_misc/bsg_div_srt_sel_rom.txt; do not modify.
module bsg_div_srt_sel_rom #(
  parameter integer width_p = "inv"
  ,parameter integer addr_width_p = "inv"
)(
  input [addr_width_p-1:0] addr_i
  ,output logic [width_p-1:0] data_o
);
always_comb unique case(addr_i)
     // #0
    0: data_o = width_p'(0); // 0x0
    1: data_o = width_p'(0); // 0x0
    2: data_o = width_p'(0); // 0x0
    3: data_o = width_p'(0); // 0x0
    4: data_o = width_p'(0); // 0x0
    5: data_o = width_p'(0); // 0x0
    6: data_o = width_p'(0); // 0x0
    7: data_o = width_p'(0); // 0x0
    8: data_o = width_p'(0); // 0x0
    9: data_o = width_p'(0); // 0x0
    10: data_o = width_p'(0); // 0x0
    11: data_o = width_p'(0); // 0x0
    12: data_o = width_p'(0); // 0x0
    13: data_o = width_p'(0); // 0x0
    14: data_o = width_p'(0); // 0x0
    15: data_o = width_p'(0); // 0x0
     // #1
    16: data_o = width_p'(0); // 0x0
    17: data_o = width_p'(0); // 0x0
    18: data_o = width_p'(0); // 0x0
    19: data_o = width_p'(0); // 0x0
    20: data_o = width_p'(0); // 0x0
    21: data_o = width_p'(0); // 0x0
    22: data_o = width_p'(0); // 0x0
    23: data_o = width_p'(0); // 0x0
    24: data_o = width_p'(0); // 0x0
    25: data_o = width_p'(0); // 0x0
    26: data_o = width_p'(0); // 0x0
    27: data_o = width_p'(0); // 0x0
    28: data_o = width_p'(0); // 0x0
    29: data_o = width_p'(0); // 0x0
    30: data_o = width_p'(0); // 0x0
    31: data_o = width_p'(0); // 0x0
     // #2
    32: data_o = width_p'(0); // 0x0
    33: data_o = width_p'(0); // 0x0
    34: data_o = width_p'(0); // 0x0
    35: data_o = width_p'(0); // 0x0
    36: data_o = width_p'(0); // 0x0
    37: data_o = width_p'(0); // 0x0
    38: data_o = width_p'(0); // 0x0
    39: data_o = width_p'(0); // 0x0
    40: data_o = width_p'(0); // 0x0
    41: data_o = width_p'(0); // 0x0
    42: data_o = width_p'(0); // 0x0
    43: data_o = width_p'(0); // 0x0
    44: data_o = width_p'(0); // 0x0
    45: data_o = width_p'(0); // 0x0
    46: data_o = width_p'(0); // 0x0
    47: data_o = width_p'(0); // 0x0
     // #3
    48: data_o = width_p'(1); // 0x1
    49: data_o = width_p'(1); // 0x1
    50: data_o = width_p'(0); // 0x0
    51: data_o = width_p'(0); // 0x0
    52: data_o = width_p'(0); // 0x0
    53: data_o = width_p'(0); // 0x0
    54: data_o = width_p'(0); // 0x0
    55: data_o = width_p'(0); // 0x0
    56: data_o = width_p'(0); // 0x0
    57: data_o = width_p'(0); // 0x0
    58: data_o = width_p'(0); // 0x0
    59: data_o = width_p'(0); // 0x0
    60: data_o = width_p'(0); // 0x0
    61: data_o = width_p'(0); // 0x0
    62: data_o = width_p'(0); // 0x0
    63: data_o = width_p'(0); // 0x0
     // #4
    64: data_o = width_p'(1); // 0x1
    65: data_o = width_p'(1); // 0x1
    66: data_o = width_p'(1); // 0x1
    67: data_o = width_p'(0); // 0x0
    68: data_o = width_p'(0); // 0x0
    69: data_o = width_p'(0); // 0x0
    70: data_o = width_p'(0); // 0x0
    71: data_o = width_p'(0); // 0x0
    72: data_o = width_p'(0); // 0x0
    73: data_o = width_p'(0); // 0x0
    74: data_o = width_p'(0); // 0x0
    75: data_o = width_p'(0); // 0x0
    76: data_o = width_p'(0); // 0x0
    77: data_o = width_p'(0); // 0x0
    78: data_o = width_p'(0); // 0x0
    79: data_o = width_p'(0); // 0x0
     // #5
    80: data_o = width_p'(1); // 0x1
    81: data_o = width_p'(1); // 0x1
    82: data_o = width_p'(1); // 0x1
    83: data_o = width_p'(1); // 0x1
    84: data_o = width_p'(1); // 0x1
    85: data_o = width_p'(0); // 0x0
    86: data_o = width_p'(0); // 0x0
    87: data_o = width_p'(0); // 0x0
    88: data_o = width_p'(0); // 0x0
    89: data_o = width_p'(0); // 0x0
    90: data_o = width_p'(0); // 0x0
    91: data_o = width_p'(0); // 0x0
    92: data_o = width_p'(0); // 0x0
    93: data_o = width_p'(0); // 0x0
    94: data_o = width_p'(0); // 0x0
    95: data_o = width_p'(0); // 0x0
     // #6
    96: data_o = width_p'(1); // 0x1
    97: data_o = width_p'(1); // 0x1
    98: data_o = width_p'(1); // 0x1
    99: data_o = width_p'(1); // 0x1
    100: data_o = width_p'(1); // 0x1
    101: data_o = width_p'(1); // 0x1
    102: data_o = width_p'(1); // 0x1
    103: data_o = width_p'(0); // 0x0
    104: data_o = width_p'(0); // 0x0
    105: data_o = width_p'(0); // 0x0
    106: data_o = width_p'(0); // 0x0
    107: data_o = width_p'(0); // 0x0
    108: data_o = width_p'(0); // 0x0
    109: data_o = width_p'(0); // 0x0
    110: data_o = width_p'(0); // 0x0
    111: data_o = width_p'(0); // 0x0
     // #7
    112: data_o = width_p'(1); // 0x1
    113: data_o = width_p'(1); // 0x1
    114: data_o = width_p'(1); // 0x1
    115: data_o = width_p'(1); // 0x1
    116: data_o = width_p'(1); // 0x1
    117: data_o = width_p'(1); // 0x1
    118: data_o = width_p'(1); // 0x1
    119: data_o = width_p'(1); // 0x1
    120: data_o = width_p'(1); // 0x1
    121: data_o = width_p'(1); // 0x1
    122: data_o = width_p'(1); // 0x1
    123: data_o = width_p'(1); // 0x1
    124: data_o = width_p'(1); // 0x1
    125: data_o = width_p'(0); // 0x0
    126: data_o = width_p'(0); // 0x0
    127: data_o = width_p'(0); // 0x0
    default: data_o = 'X;
endcase
endmodule
