//-------------------------------------------------------
// -- bsg_mul_iterative_width_64_radix4.v 
//-------------------------------------------------------
// THIS FILE IS AUTO-GENERATED. DO NOT MODIFY.
//-------------------------------------------------------

module bsg_mul_iterative_width_64_radix4 (
  input clk_i,
  input reset_i,
  input [63:0] opA_i,
  input [63:0] opB_i,
  input sign_i,
  input v_i,
  output ready_o,
  output [127:0] o,
  output v_o,
  input yumi_i
);

// State machine.
typedef enum logic [1:0] {eIdle, eCal, eCPA, eDone} state_e;
state_e state_r;
wire cal_done;
always_ff @(posedge clk_i) begin: state_machine
  if(reset_i) state_r <= eIdle;
  else unique case(state_r)
    eIdle: if(v_i) state_r <= eCal;
    eCal: if(cal_done) state_r <= eCPA;
    eCPA: state_r <= eDone;
    eDone: if(yumi_i) state_r <= eIdle;
    default: state_r <= eIdle;
  endcase
end: state_machine

// Counter for eCal.
reg[1:0] counter_r;
always_ff @(posedge clk_i) begin: counter_update
  if(reset_i || state_r == eIdle) counter_r <= '0;
  else if(state_r == eCal) counter_r <= counter_r + 1;
end: counter_update

// Binding ports
assign cal_done = counter_r == 2;
assign ready_o = state_r == eIdle;
assign v_o = state_r == eDone;

// Sign extend opA and opB.
wire opA_sign = sign_i & opA_i[63];
wire opB_sign = sign_i & opB_i[63];
// Sign extension of opB.
wire [66:0] extend_opB = {{2{opB_sign}}, opB_i, 1'b0};
// generate encoding of opB.
wire [32:0][2:0] opB_encodings;
for(genvar i = 0; i < 33; ++i) begin: encoders
bsg_booth_encoder #(
  .radix_p(4)
) encoder (
  .i(extend_opB[i*2+:3])
  ,.o(opB_encodings[i])
);
end: encoders

// register for opA and opB.
reg [63:0] opA_r;
reg opA_sign_r;
reg [31:0][2:0] opB_r;
always_ff @(posedge clk_i) begin: operand_update
  if(reset_i) begin
    opA_r <= '0;
    opB_r <= '0;
    opA_sign_r <= '0;
  end
  else unique case(state_r)
    eIdle: if(v_i) begin
      opA_r <= opA_i;
      opA_sign_r <= opA_sign;
      opB_r <= opB_encodings[32:1];
    end
    eCal: begin
      opB_r <= opB_r >> 33;
    end
    default: begin
    end
  endcase
end: operand_update
reg [89:0] outA_r, outB_r;
wire [88:0] outA_n, outB_n;
wire [67:0] outA_init, outB_init;
logic [67:0] accA, accB;
wire [10:0][66:0] pps;

for(genvar i = 0; i < 11; ++i) begin: selectors
bsg_booth_selector_64_radix4 selector (
  .i(opB_r[i])
  ,.sign_i(opA_sign_r)
  ,.x1_i(opA_r)
  ,.o(pps[i])
);
end: selectors

wire [10:0] sign_cor;
for(genvar i = 0; i < 10; ++i) begin: sign_corrections
assign sign_cor[i+1] = opB_r[i][2];
end: sign_corrections

reg sign_corr_r;
always_ff @(posedge clk_i) begin: sign_corr_update
  if(reset_i) sign_corr_r <= '0;
  else if(state_r == eIdle && v_i) sign_corr_r <= opB_encodings[0][2];
  else if(state_r == eCal) sign_corr_r <= opB_r[10][2];
  else sign_corr_r <= '0;
end: sign_corr_update
assign sign_cor[0] = sign_corr_r;


bsg_mul_compressor_64_2_unpipelined_11 at (
  .acc_a_i(accA)
  ,.acc_b_i(accB)
  ,.pps_i(pps)
  ,.sign_correction_i(sign_cor)
  ,.resA_o(outA_n)
  ,.resB_o(outB_n)
);

bsg_booth_selector_radix4_first #(
  .width_p(64)
) selector_init (
  .i(opB_encodings[0])
  ,.sign_i(opA_sign)
  ,.x1_i(opA_i)
  ,.a_o(outA_init)
  ,.b_o(outB_init)
);

// outA_r, outB_r
always_ff @(posedge clk_i) begin: at_out
  if(reset_i) begin
    outA_r <= '0;
    outB_r <= '0;
  end
  else unique case(state_r)
    eIdle: if(v_i) begin
      outA_r <= {outA_init, (22)'(0)};
      outB_r <= {outB_init, (22)'(0)};
    end
    eCal: begin
       outA_r <= {(1)'(0), outA_n};
       outB_r <= {(1)'(0), outB_n};
    end
    default: begin
    end
  endcase
end: at_out
assign accA = outA_r[89:22];
assign accB = outB_r[89:22];
logic [21:0] sub_opA, sub_opB;
logic sub_opC;
wire [22:0] sub_opR = sub_opA + sub_opB + 22'(sub_opC);
reg [66:0] sub_res_r;
assign sub_opA = outA_r[21:0];
assign sub_opB = outB_r[21:0];
assign sub_opC = sub_res_r[66];
always_ff @(posedge clk_i) begin: sub_res
  if(reset_i) sub_res_r <= '0;
  else unique case(state_r)
    eIdle: if(v_i) sub_res_r <= '0;
    eCal: sub_res_r <= {sub_opR ,sub_res_r[65:22]};
    eCPA: sub_res_r <= {sub_opR ,sub_res_r[65:22]};
    default: begin
    end
  endcase
end: sub_res
logic [61:0] sel_opA, sel_opB;
logic sel_opC;
wire [61:0] sel_res_c0 = sel_opA + sel_opB;
wire [61:0] sel_res_c1 = sel_opA + sel_opB + 1'b1;
wire [61:0] sel_res = sel_opC ? sel_res_c1 : sel_res_c0;
assign sel_opA = outA_r[22+:62];
assign sel_opB = outB_r[22+:62];
assign sel_opC = sub_opR[22];

reg [61:0] result_high_r;
always_ff @(posedge clk_i) begin: result_high
  if(reset_i) result_high_r <= '0;
  else unique case(state_r)
    eIdle: if(v_i) result_high_r <= '0;
    eCPA: result_high_r <= sel_res;
    default: begin
    end
  endcase
end: result_high
assign o = {result_high_r, sub_res_r[65:0]};
endmodule

module bsg_booth_encoder #(
    parameter integer radix_p = "inv"
    ,localparam integer radix_log2_lp = $clog2(radix_p)
)(
    input [radix_log2_lp:0] i
    ,output [radix_log2_lp:0] o
);

// if i[radix_log2_lp] == 1, o[radix_log2_lp-1:0] = - (i[:1] + i[0])
// otherwise, o[radix_log2_lp-1:0] = (i[:1] + i[0])
assign o[radix_log2_lp-1:0] = i[radix_log2_lp] ? ({~i[0],{radix_log2_lp-1{i[0]}}} - i[radix_log2_lp-1:1]) : i[radix_log2_lp-1:1] + i[0];

assign o[radix_log2_lp] = i == '1 ? '0 : i[radix_log2_lp];

endmodule


module bsg_mul_compressor_64_2_unpipelined_11 (
  input [67:0] acc_a_i,
  input [67:0] acc_b_i,
  input [10:0][66:0] pps_i,
  input [10:0] sign_correction_i,
  output [88:0] resA_o,
  output [88:0] resB_o
);

// Number of CSA: 738

wire res_0_0, carry_0_0;
assign {carry_0_0, res_0_0} = acc_a_i[14] + acc_b_i[14];
wire res_0_1, carry_0_1;
assign {carry_0_1, res_0_1} = acc_a_i[15] + acc_b_i[15];
wire res_0_2, carry_0_2;
assign {carry_0_2, res_0_2} = acc_a_i[16] + acc_b_i[16] + pps_i[0][14];
wire res_0_3, carry_0_3;
assign {carry_0_3, res_0_3} = pps_i[1][12] + pps_i[2][10];
wire res_0_4, carry_0_4;
assign {carry_0_4, res_0_4} = acc_a_i[17] + acc_b_i[17] + pps_i[0][15];
wire res_0_5, carry_0_5;
assign {carry_0_5, res_0_5} = pps_i[1][13] + pps_i[2][11];
wire res_0_6, carry_0_6;
assign {carry_0_6, res_0_6} = acc_a_i[18] + acc_b_i[18] + pps_i[0][16];
wire res_0_7, carry_0_7;
assign {carry_0_7, res_0_7} = pps_i[1][14] + pps_i[2][12] + pps_i[3][10];
wire res_0_8, carry_0_8;
assign {carry_0_8, res_0_8} = pps_i[4][8] + pps_i[5][6];
wire res_0_9, carry_0_9;
assign {carry_0_9, res_0_9} = acc_a_i[19] + acc_b_i[19] + pps_i[0][17];
wire res_0_10, carry_0_10;
assign {carry_0_10, res_0_10} = pps_i[1][15] + pps_i[2][13] + pps_i[3][11];
wire res_0_11, carry_0_11;
assign {carry_0_11, res_0_11} = pps_i[4][9] + pps_i[5][7];
wire res_0_12, carry_0_12;
assign {carry_0_12, res_0_12} = acc_a_i[20] + acc_b_i[20] + pps_i[0][18];
wire res_0_13, carry_0_13;
assign {carry_0_13, res_0_13} = pps_i[1][16] + pps_i[2][14] + pps_i[3][12];
wire res_0_14, carry_0_14;
assign {carry_0_14, res_0_14} = pps_i[4][10] + pps_i[5][8] + pps_i[6][6];
wire res_0_15, carry_0_15;
assign {carry_0_15, res_0_15} = pps_i[7][4] + pps_i[8][2];
wire res_0_16, carry_0_16;
assign {carry_0_16, res_0_16} = acc_a_i[21] + acc_b_i[21] + pps_i[0][19];
wire res_0_17, carry_0_17;
assign {carry_0_17, res_0_17} = pps_i[1][17] + pps_i[2][15] + pps_i[3][13];
wire res_0_18, carry_0_18;
assign {carry_0_18, res_0_18} = pps_i[4][11] + pps_i[5][9] + pps_i[6][7];
wire res_0_19, carry_0_19;
assign {carry_0_19, res_0_19} = pps_i[7][5] + pps_i[8][3];
wire res_0_20, carry_0_20;
assign {carry_0_20, res_0_20} = acc_a_i[22] + acc_b_i[22] + pps_i[0][20];
wire res_0_21, carry_0_21;
assign {carry_0_21, res_0_21} = pps_i[1][18] + pps_i[2][16] + pps_i[3][14];
wire res_0_22, carry_0_22;
assign {carry_0_22, res_0_22} = pps_i[4][12] + pps_i[5][10] + pps_i[6][8];
wire res_0_23, carry_0_23;
assign {carry_0_23, res_0_23} = pps_i[7][6] + pps_i[8][4] + pps_i[9][2];
wire res_0_24, carry_0_24;
assign {carry_0_24, res_0_24} = acc_a_i[23] + acc_b_i[23] + pps_i[0][21];
wire res_0_25, carry_0_25;
assign {carry_0_25, res_0_25} = pps_i[1][19] + pps_i[2][17] + pps_i[3][15];
wire res_0_26, carry_0_26;
assign {carry_0_26, res_0_26} = pps_i[4][13] + pps_i[5][11] + pps_i[6][9];
wire res_0_27, carry_0_27;
assign {carry_0_27, res_0_27} = pps_i[7][7] + pps_i[8][5] + pps_i[9][3];
wire res_0_28, carry_0_28;
assign {carry_0_28, res_0_28} = acc_a_i[24] + acc_b_i[24] + pps_i[0][22];
wire res_0_29, carry_0_29;
assign {carry_0_29, res_0_29} = pps_i[1][20] + pps_i[2][18] + pps_i[3][16];
wire res_0_30, carry_0_30;
assign {carry_0_30, res_0_30} = pps_i[4][14] + pps_i[5][12] + pps_i[6][10];
wire res_0_31, carry_0_31;
assign {carry_0_31, res_0_31} = pps_i[7][8] + pps_i[8][6] + pps_i[9][4];
wire res_0_32, carry_0_32;
assign {carry_0_32, res_0_32} = acc_a_i[25] + acc_b_i[25] + pps_i[0][23];
wire res_0_33, carry_0_33;
assign {carry_0_33, res_0_33} = pps_i[1][21] + pps_i[2][19] + pps_i[3][17];
wire res_0_34, carry_0_34;
assign {carry_0_34, res_0_34} = pps_i[4][15] + pps_i[5][13] + pps_i[6][11];
wire res_0_35, carry_0_35;
assign {carry_0_35, res_0_35} = pps_i[7][9] + pps_i[8][7] + pps_i[9][5];
wire res_0_36, carry_0_36;
assign {carry_0_36, res_0_36} = acc_a_i[26] + acc_b_i[26] + pps_i[0][24];
wire res_0_37, carry_0_37;
assign {carry_0_37, res_0_37} = pps_i[1][22] + pps_i[2][20] + pps_i[3][18];
wire res_0_38, carry_0_38;
assign {carry_0_38, res_0_38} = pps_i[4][16] + pps_i[5][14] + pps_i[6][12];
wire res_0_39, carry_0_39;
assign {carry_0_39, res_0_39} = pps_i[7][10] + pps_i[8][8] + pps_i[9][6];
wire res_0_40, carry_0_40;
assign {carry_0_40, res_0_40} = acc_a_i[27] + acc_b_i[27] + pps_i[0][25];
wire res_0_41, carry_0_41;
assign {carry_0_41, res_0_41} = pps_i[1][23] + pps_i[2][21] + pps_i[3][19];
wire res_0_42, carry_0_42;
assign {carry_0_42, res_0_42} = pps_i[4][17] + pps_i[5][15] + pps_i[6][13];
wire res_0_43, carry_0_43;
assign {carry_0_43, res_0_43} = pps_i[7][11] + pps_i[8][9] + pps_i[9][7];
wire res_0_44, carry_0_44;
assign {carry_0_44, res_0_44} = acc_a_i[28] + acc_b_i[28] + pps_i[0][26];
wire res_0_45, carry_0_45;
assign {carry_0_45, res_0_45} = pps_i[1][24] + pps_i[2][22] + pps_i[3][20];
wire res_0_46, carry_0_46;
assign {carry_0_46, res_0_46} = pps_i[4][18] + pps_i[5][16] + pps_i[6][14];
wire res_0_47, carry_0_47;
assign {carry_0_47, res_0_47} = pps_i[7][12] + pps_i[8][10] + pps_i[9][8];
wire res_0_48, carry_0_48;
assign {carry_0_48, res_0_48} = acc_a_i[29] + acc_b_i[29] + pps_i[0][27];
wire res_0_49, carry_0_49;
assign {carry_0_49, res_0_49} = pps_i[1][25] + pps_i[2][23] + pps_i[3][21];
wire res_0_50, carry_0_50;
assign {carry_0_50, res_0_50} = pps_i[4][19] + pps_i[5][17] + pps_i[6][15];
wire res_0_51, carry_0_51;
assign {carry_0_51, res_0_51} = pps_i[7][13] + pps_i[8][11] + pps_i[9][9];
wire res_0_52, carry_0_52;
assign {carry_0_52, res_0_52} = acc_a_i[30] + acc_b_i[30] + pps_i[0][28];
wire res_0_53, carry_0_53;
assign {carry_0_53, res_0_53} = pps_i[1][26] + pps_i[2][24] + pps_i[3][22];
wire res_0_54, carry_0_54;
assign {carry_0_54, res_0_54} = pps_i[4][20] + pps_i[5][18] + pps_i[6][16];
wire res_0_55, carry_0_55;
assign {carry_0_55, res_0_55} = pps_i[7][14] + pps_i[8][12] + pps_i[9][10];
wire res_0_56, carry_0_56;
assign {carry_0_56, res_0_56} = acc_a_i[31] + acc_b_i[31] + pps_i[0][29];
wire res_0_57, carry_0_57;
assign {carry_0_57, res_0_57} = pps_i[1][27] + pps_i[2][25] + pps_i[3][23];
wire res_0_58, carry_0_58;
assign {carry_0_58, res_0_58} = pps_i[4][21] + pps_i[5][19] + pps_i[6][17];
wire res_0_59, carry_0_59;
assign {carry_0_59, res_0_59} = pps_i[7][15] + pps_i[8][13] + pps_i[9][11];
wire res_0_60, carry_0_60;
assign {carry_0_60, res_0_60} = acc_a_i[32] + acc_b_i[32] + pps_i[0][30];
wire res_0_61, carry_0_61;
assign {carry_0_61, res_0_61} = pps_i[1][28] + pps_i[2][26] + pps_i[3][24];
wire res_0_62, carry_0_62;
assign {carry_0_62, res_0_62} = pps_i[4][22] + pps_i[5][20] + pps_i[6][18];
wire res_0_63, carry_0_63;
assign {carry_0_63, res_0_63} = pps_i[7][16] + pps_i[8][14] + pps_i[9][12];
wire res_0_64, carry_0_64;
assign {carry_0_64, res_0_64} = acc_a_i[33] + acc_b_i[33] + pps_i[0][31];
wire res_0_65, carry_0_65;
assign {carry_0_65, res_0_65} = pps_i[1][29] + pps_i[2][27] + pps_i[3][25];
wire res_0_66, carry_0_66;
assign {carry_0_66, res_0_66} = pps_i[4][23] + pps_i[5][21] + pps_i[6][19];
wire res_0_67, carry_0_67;
assign {carry_0_67, res_0_67} = pps_i[7][17] + pps_i[8][15] + pps_i[9][13];
wire res_0_68, carry_0_68;
assign {carry_0_68, res_0_68} = acc_a_i[34] + acc_b_i[34] + pps_i[0][32];
wire res_0_69, carry_0_69;
assign {carry_0_69, res_0_69} = pps_i[1][30] + pps_i[2][28] + pps_i[3][26];
wire res_0_70, carry_0_70;
assign {carry_0_70, res_0_70} = pps_i[4][24] + pps_i[5][22] + pps_i[6][20];
wire res_0_71, carry_0_71;
assign {carry_0_71, res_0_71} = pps_i[7][18] + pps_i[8][16] + pps_i[9][14];
wire res_0_72, carry_0_72;
assign {carry_0_72, res_0_72} = acc_a_i[35] + acc_b_i[35] + pps_i[0][33];
wire res_0_73, carry_0_73;
assign {carry_0_73, res_0_73} = pps_i[1][31] + pps_i[2][29] + pps_i[3][27];
wire res_0_74, carry_0_74;
assign {carry_0_74, res_0_74} = pps_i[4][25] + pps_i[5][23] + pps_i[6][21];
wire res_0_75, carry_0_75;
assign {carry_0_75, res_0_75} = pps_i[7][19] + pps_i[8][17] + pps_i[9][15];
wire res_0_76, carry_0_76;
assign {carry_0_76, res_0_76} = acc_a_i[36] + acc_b_i[36] + pps_i[0][34];
wire res_0_77, carry_0_77;
assign {carry_0_77, res_0_77} = pps_i[1][32] + pps_i[2][30] + pps_i[3][28];
wire res_0_78, carry_0_78;
assign {carry_0_78, res_0_78} = pps_i[4][26] + pps_i[5][24] + pps_i[6][22];
wire res_0_79, carry_0_79;
assign {carry_0_79, res_0_79} = pps_i[7][20] + pps_i[8][18] + pps_i[9][16];
wire res_0_80, carry_0_80;
assign {carry_0_80, res_0_80} = acc_a_i[37] + acc_b_i[37] + pps_i[0][35];
wire res_0_81, carry_0_81;
assign {carry_0_81, res_0_81} = pps_i[1][33] + pps_i[2][31] + pps_i[3][29];
wire res_0_82, carry_0_82;
assign {carry_0_82, res_0_82} = pps_i[4][27] + pps_i[5][25] + pps_i[6][23];
wire res_0_83, carry_0_83;
assign {carry_0_83, res_0_83} = pps_i[7][21] + pps_i[8][19] + pps_i[9][17];
wire res_0_84, carry_0_84;
assign {carry_0_84, res_0_84} = acc_a_i[38] + acc_b_i[38] + pps_i[0][36];
wire res_0_85, carry_0_85;
assign {carry_0_85, res_0_85} = pps_i[1][34] + pps_i[2][32] + pps_i[3][30];
wire res_0_86, carry_0_86;
assign {carry_0_86, res_0_86} = pps_i[4][28] + pps_i[5][26] + pps_i[6][24];
wire res_0_87, carry_0_87;
assign {carry_0_87, res_0_87} = pps_i[7][22] + pps_i[8][20] + pps_i[9][18];
wire res_0_88, carry_0_88;
assign {carry_0_88, res_0_88} = acc_a_i[39] + acc_b_i[39] + pps_i[0][37];
wire res_0_89, carry_0_89;
assign {carry_0_89, res_0_89} = pps_i[1][35] + pps_i[2][33] + pps_i[3][31];
wire res_0_90, carry_0_90;
assign {carry_0_90, res_0_90} = pps_i[4][29] + pps_i[5][27] + pps_i[6][25];
wire res_0_91, carry_0_91;
assign {carry_0_91, res_0_91} = pps_i[7][23] + pps_i[8][21] + pps_i[9][19];
wire res_0_92, carry_0_92;
assign {carry_0_92, res_0_92} = acc_a_i[40] + acc_b_i[40] + pps_i[0][38];
wire res_0_93, carry_0_93;
assign {carry_0_93, res_0_93} = pps_i[1][36] + pps_i[2][34] + pps_i[3][32];
wire res_0_94, carry_0_94;
assign {carry_0_94, res_0_94} = pps_i[4][30] + pps_i[5][28] + pps_i[6][26];
wire res_0_95, carry_0_95;
assign {carry_0_95, res_0_95} = pps_i[7][24] + pps_i[8][22] + pps_i[9][20];
wire res_0_96, carry_0_96;
assign {carry_0_96, res_0_96} = acc_a_i[41] + acc_b_i[41] + pps_i[0][39];
wire res_0_97, carry_0_97;
assign {carry_0_97, res_0_97} = pps_i[1][37] + pps_i[2][35] + pps_i[3][33];
wire res_0_98, carry_0_98;
assign {carry_0_98, res_0_98} = pps_i[4][31] + pps_i[5][29] + pps_i[6][27];
wire res_0_99, carry_0_99;
assign {carry_0_99, res_0_99} = pps_i[7][25] + pps_i[8][23] + pps_i[9][21];
wire res_0_100, carry_0_100;
assign {carry_0_100, res_0_100} = acc_a_i[42] + acc_b_i[42] + pps_i[0][40];
wire res_0_101, carry_0_101;
assign {carry_0_101, res_0_101} = pps_i[1][38] + pps_i[2][36] + pps_i[3][34];
wire res_0_102, carry_0_102;
assign {carry_0_102, res_0_102} = pps_i[4][32] + pps_i[5][30] + pps_i[6][28];
wire res_0_103, carry_0_103;
assign {carry_0_103, res_0_103} = pps_i[7][26] + pps_i[8][24] + pps_i[9][22];
wire res_0_104, carry_0_104;
assign {carry_0_104, res_0_104} = acc_a_i[43] + acc_b_i[43] + pps_i[0][41];
wire res_0_105, carry_0_105;
assign {carry_0_105, res_0_105} = pps_i[1][39] + pps_i[2][37] + pps_i[3][35];
wire res_0_106, carry_0_106;
assign {carry_0_106, res_0_106} = pps_i[4][33] + pps_i[5][31] + pps_i[6][29];
wire res_0_107, carry_0_107;
assign {carry_0_107, res_0_107} = pps_i[7][27] + pps_i[8][25] + pps_i[9][23];
wire res_0_108, carry_0_108;
assign {carry_0_108, res_0_108} = acc_a_i[44] + acc_b_i[44] + pps_i[0][42];
wire res_0_109, carry_0_109;
assign {carry_0_109, res_0_109} = pps_i[1][40] + pps_i[2][38] + pps_i[3][36];
wire res_0_110, carry_0_110;
assign {carry_0_110, res_0_110} = pps_i[4][34] + pps_i[5][32] + pps_i[6][30];
wire res_0_111, carry_0_111;
assign {carry_0_111, res_0_111} = pps_i[7][28] + pps_i[8][26] + pps_i[9][24];
wire res_0_112, carry_0_112;
assign {carry_0_112, res_0_112} = acc_a_i[45] + acc_b_i[45] + pps_i[0][43];
wire res_0_113, carry_0_113;
assign {carry_0_113, res_0_113} = pps_i[1][41] + pps_i[2][39] + pps_i[3][37];
wire res_0_114, carry_0_114;
assign {carry_0_114, res_0_114} = pps_i[4][35] + pps_i[5][33] + pps_i[6][31];
wire res_0_115, carry_0_115;
assign {carry_0_115, res_0_115} = pps_i[7][29] + pps_i[8][27] + pps_i[9][25];
wire res_0_116, carry_0_116;
assign {carry_0_116, res_0_116} = acc_a_i[46] + acc_b_i[46] + pps_i[0][44];
wire res_0_117, carry_0_117;
assign {carry_0_117, res_0_117} = pps_i[1][42] + pps_i[2][40] + pps_i[3][38];
wire res_0_118, carry_0_118;
assign {carry_0_118, res_0_118} = pps_i[4][36] + pps_i[5][34] + pps_i[6][32];
wire res_0_119, carry_0_119;
assign {carry_0_119, res_0_119} = pps_i[7][30] + pps_i[8][28] + pps_i[9][26];
wire res_0_120, carry_0_120;
assign {carry_0_120, res_0_120} = acc_a_i[47] + acc_b_i[47] + pps_i[0][45];
wire res_0_121, carry_0_121;
assign {carry_0_121, res_0_121} = pps_i[1][43] + pps_i[2][41] + pps_i[3][39];
wire res_0_122, carry_0_122;
assign {carry_0_122, res_0_122} = pps_i[4][37] + pps_i[5][35] + pps_i[6][33];
wire res_0_123, carry_0_123;
assign {carry_0_123, res_0_123} = pps_i[7][31] + pps_i[8][29] + pps_i[9][27];
wire res_0_124, carry_0_124;
assign {carry_0_124, res_0_124} = acc_a_i[48] + acc_b_i[48] + pps_i[0][46];
wire res_0_125, carry_0_125;
assign {carry_0_125, res_0_125} = pps_i[1][44] + pps_i[2][42] + pps_i[3][40];
wire res_0_126, carry_0_126;
assign {carry_0_126, res_0_126} = pps_i[4][38] + pps_i[5][36] + pps_i[6][34];
wire res_0_127, carry_0_127;
assign {carry_0_127, res_0_127} = pps_i[7][32] + pps_i[8][30] + pps_i[9][28];
wire res_0_128, carry_0_128;
assign {carry_0_128, res_0_128} = acc_a_i[49] + acc_b_i[49] + pps_i[0][47];
wire res_0_129, carry_0_129;
assign {carry_0_129, res_0_129} = pps_i[1][45] + pps_i[2][43] + pps_i[3][41];
wire res_0_130, carry_0_130;
assign {carry_0_130, res_0_130} = pps_i[4][39] + pps_i[5][37] + pps_i[6][35];
wire res_0_131, carry_0_131;
assign {carry_0_131, res_0_131} = pps_i[7][33] + pps_i[8][31] + pps_i[9][29];
wire res_0_132, carry_0_132;
assign {carry_0_132, res_0_132} = acc_a_i[50] + acc_b_i[50] + pps_i[0][48];
wire res_0_133, carry_0_133;
assign {carry_0_133, res_0_133} = pps_i[1][46] + pps_i[2][44] + pps_i[3][42];
wire res_0_134, carry_0_134;
assign {carry_0_134, res_0_134} = pps_i[4][40] + pps_i[5][38] + pps_i[6][36];
wire res_0_135, carry_0_135;
assign {carry_0_135, res_0_135} = pps_i[7][34] + pps_i[8][32] + pps_i[9][30];
wire res_0_136, carry_0_136;
assign {carry_0_136, res_0_136} = acc_a_i[51] + acc_b_i[51] + pps_i[0][49];
wire res_0_137, carry_0_137;
assign {carry_0_137, res_0_137} = pps_i[1][47] + pps_i[2][45] + pps_i[3][43];
wire res_0_138, carry_0_138;
assign {carry_0_138, res_0_138} = pps_i[4][41] + pps_i[5][39] + pps_i[6][37];
wire res_0_139, carry_0_139;
assign {carry_0_139, res_0_139} = pps_i[7][35] + pps_i[8][33] + pps_i[9][31];
wire res_0_140, carry_0_140;
assign {carry_0_140, res_0_140} = acc_a_i[52] + acc_b_i[52] + pps_i[0][50];
wire res_0_141, carry_0_141;
assign {carry_0_141, res_0_141} = pps_i[1][48] + pps_i[2][46] + pps_i[3][44];
wire res_0_142, carry_0_142;
assign {carry_0_142, res_0_142} = pps_i[4][42] + pps_i[5][40] + pps_i[6][38];
wire res_0_143, carry_0_143;
assign {carry_0_143, res_0_143} = pps_i[7][36] + pps_i[8][34] + pps_i[9][32];
wire res_0_144, carry_0_144;
assign {carry_0_144, res_0_144} = acc_a_i[53] + acc_b_i[53] + pps_i[0][51];
wire res_0_145, carry_0_145;
assign {carry_0_145, res_0_145} = pps_i[1][49] + pps_i[2][47] + pps_i[3][45];
wire res_0_146, carry_0_146;
assign {carry_0_146, res_0_146} = pps_i[4][43] + pps_i[5][41] + pps_i[6][39];
wire res_0_147, carry_0_147;
assign {carry_0_147, res_0_147} = pps_i[7][37] + pps_i[8][35] + pps_i[9][33];
wire res_0_148, carry_0_148;
assign {carry_0_148, res_0_148} = acc_a_i[54] + acc_b_i[54] + pps_i[0][52];
wire res_0_149, carry_0_149;
assign {carry_0_149, res_0_149} = pps_i[1][50] + pps_i[2][48] + pps_i[3][46];
wire res_0_150, carry_0_150;
assign {carry_0_150, res_0_150} = pps_i[4][44] + pps_i[5][42] + pps_i[6][40];
wire res_0_151, carry_0_151;
assign {carry_0_151, res_0_151} = pps_i[7][38] + pps_i[8][36] + pps_i[9][34];
wire res_0_152, carry_0_152;
assign {carry_0_152, res_0_152} = acc_a_i[55] + acc_b_i[55] + pps_i[0][53];
wire res_0_153, carry_0_153;
assign {carry_0_153, res_0_153} = pps_i[1][51] + pps_i[2][49] + pps_i[3][47];
wire res_0_154, carry_0_154;
assign {carry_0_154, res_0_154} = pps_i[4][45] + pps_i[5][43] + pps_i[6][41];
wire res_0_155, carry_0_155;
assign {carry_0_155, res_0_155} = pps_i[7][39] + pps_i[8][37] + pps_i[9][35];
wire res_0_156, carry_0_156;
assign {carry_0_156, res_0_156} = acc_a_i[56] + acc_b_i[56] + pps_i[0][54];
wire res_0_157, carry_0_157;
assign {carry_0_157, res_0_157} = pps_i[1][52] + pps_i[2][50] + pps_i[3][48];
wire res_0_158, carry_0_158;
assign {carry_0_158, res_0_158} = pps_i[4][46] + pps_i[5][44] + pps_i[6][42];
wire res_0_159, carry_0_159;
assign {carry_0_159, res_0_159} = pps_i[7][40] + pps_i[8][38] + pps_i[9][36];
wire res_0_160, carry_0_160;
assign {carry_0_160, res_0_160} = acc_a_i[57] + acc_b_i[57] + pps_i[0][55];
wire res_0_161, carry_0_161;
assign {carry_0_161, res_0_161} = pps_i[1][53] + pps_i[2][51] + pps_i[3][49];
wire res_0_162, carry_0_162;
assign {carry_0_162, res_0_162} = pps_i[4][47] + pps_i[5][45] + pps_i[6][43];
wire res_0_163, carry_0_163;
assign {carry_0_163, res_0_163} = pps_i[7][41] + pps_i[8][39] + pps_i[9][37];
wire res_0_164, carry_0_164;
assign {carry_0_164, res_0_164} = acc_a_i[58] + acc_b_i[58] + pps_i[0][56];
wire res_0_165, carry_0_165;
assign {carry_0_165, res_0_165} = pps_i[1][54] + pps_i[2][52] + pps_i[3][50];
wire res_0_166, carry_0_166;
assign {carry_0_166, res_0_166} = pps_i[4][48] + pps_i[5][46] + pps_i[6][44];
wire res_0_167, carry_0_167;
assign {carry_0_167, res_0_167} = pps_i[7][42] + pps_i[8][40] + pps_i[9][38];
wire res_0_168, carry_0_168;
assign {carry_0_168, res_0_168} = acc_a_i[59] + acc_b_i[59] + pps_i[0][57];
wire res_0_169, carry_0_169;
assign {carry_0_169, res_0_169} = pps_i[1][55] + pps_i[2][53] + pps_i[3][51];
wire res_0_170, carry_0_170;
assign {carry_0_170, res_0_170} = pps_i[4][49] + pps_i[5][47] + pps_i[6][45];
wire res_0_171, carry_0_171;
assign {carry_0_171, res_0_171} = pps_i[7][43] + pps_i[8][41] + pps_i[9][39];
wire res_0_172, carry_0_172;
assign {carry_0_172, res_0_172} = acc_a_i[60] + acc_b_i[60] + pps_i[0][58];
wire res_0_173, carry_0_173;
assign {carry_0_173, res_0_173} = pps_i[1][56] + pps_i[2][54] + pps_i[3][52];
wire res_0_174, carry_0_174;
assign {carry_0_174, res_0_174} = pps_i[4][50] + pps_i[5][48] + pps_i[6][46];
wire res_0_175, carry_0_175;
assign {carry_0_175, res_0_175} = pps_i[7][44] + pps_i[8][42] + pps_i[9][40];
wire res_0_176, carry_0_176;
assign {carry_0_176, res_0_176} = acc_a_i[61] + acc_b_i[61] + pps_i[0][59];
wire res_0_177, carry_0_177;
assign {carry_0_177, res_0_177} = pps_i[1][57] + pps_i[2][55] + pps_i[3][53];
wire res_0_178, carry_0_178;
assign {carry_0_178, res_0_178} = pps_i[4][51] + pps_i[5][49] + pps_i[6][47];
wire res_0_179, carry_0_179;
assign {carry_0_179, res_0_179} = pps_i[7][45] + pps_i[8][43] + pps_i[9][41];
wire res_0_180, carry_0_180;
assign {carry_0_180, res_0_180} = acc_a_i[62] + acc_b_i[62] + pps_i[0][60];
wire res_0_181, carry_0_181;
assign {carry_0_181, res_0_181} = pps_i[1][58] + pps_i[2][56] + pps_i[3][54];
wire res_0_182, carry_0_182;
assign {carry_0_182, res_0_182} = pps_i[4][52] + pps_i[5][50] + pps_i[6][48];
wire res_0_183, carry_0_183;
assign {carry_0_183, res_0_183} = pps_i[7][46] + pps_i[8][44] + pps_i[9][42];
wire res_0_184, carry_0_184;
assign {carry_0_184, res_0_184} = acc_a_i[63] + acc_b_i[63] + pps_i[0][61];
wire res_0_185, carry_0_185;
assign {carry_0_185, res_0_185} = pps_i[1][59] + pps_i[2][57] + pps_i[3][55];
wire res_0_186, carry_0_186;
assign {carry_0_186, res_0_186} = pps_i[4][53] + pps_i[5][51] + pps_i[6][49];
wire res_0_187, carry_0_187;
assign {carry_0_187, res_0_187} = pps_i[7][47] + pps_i[8][45] + pps_i[9][43];
wire res_0_188, carry_0_188;
assign {carry_0_188, res_0_188} = acc_a_i[64] + acc_b_i[64] + pps_i[0][62];
wire res_0_189, carry_0_189;
assign {carry_0_189, res_0_189} = pps_i[1][60] + pps_i[2][58] + pps_i[3][56];
wire res_0_190, carry_0_190;
assign {carry_0_190, res_0_190} = pps_i[4][54] + pps_i[5][52] + pps_i[6][50];
wire res_0_191, carry_0_191;
assign {carry_0_191, res_0_191} = pps_i[7][48] + pps_i[8][46] + pps_i[9][44];
wire res_0_192, carry_0_192;
assign {carry_0_192, res_0_192} = acc_a_i[65] + acc_b_i[65] + pps_i[0][63];
wire res_0_193, carry_0_193;
assign {carry_0_193, res_0_193} = pps_i[1][61] + pps_i[2][59] + pps_i[3][57];
wire res_0_194, carry_0_194;
assign {carry_0_194, res_0_194} = pps_i[4][55] + pps_i[5][53] + pps_i[6][51];
wire res_0_195, carry_0_195;
assign {carry_0_195, res_0_195} = pps_i[7][49] + pps_i[8][47] + pps_i[9][45];
wire res_0_196, carry_0_196;
assign {carry_0_196, res_0_196} = acc_a_i[66] + acc_b_i[66] + pps_i[0][64];
wire res_0_197, carry_0_197;
assign {carry_0_197, res_0_197} = pps_i[1][62] + pps_i[2][60] + pps_i[3][58];
wire res_0_198, carry_0_198;
assign {carry_0_198, res_0_198} = pps_i[4][56] + pps_i[5][54] + pps_i[6][52];
wire res_0_199, carry_0_199;
assign {carry_0_199, res_0_199} = pps_i[7][50] + pps_i[8][48] + pps_i[9][46];
wire res_0_200, carry_0_200;
assign {carry_0_200, res_0_200} = acc_a_i[67] + acc_b_i[67] + pps_i[0][65];
wire res_0_201, carry_0_201;
assign {carry_0_201, res_0_201} = pps_i[1][63] + pps_i[2][61] + pps_i[3][59];
wire res_0_202, carry_0_202;
assign {carry_0_202, res_0_202} = pps_i[4][57] + pps_i[5][55] + pps_i[6][53];
wire res_0_203, carry_0_203;
assign {carry_0_203, res_0_203} = pps_i[7][51] + pps_i[8][49] + pps_i[9][47];
wire res_0_204, carry_0_204;
assign {carry_0_204, res_0_204} = pps_i[0][66] + pps_i[1][64] + pps_i[2][62];
wire res_0_205, carry_0_205;
assign {carry_0_205, res_0_205} = pps_i[3][60] + pps_i[4][58] + pps_i[5][56];
wire res_0_206, carry_0_206;
assign {carry_0_206, res_0_206} = pps_i[6][54] + pps_i[7][52] + pps_i[8][50];
wire res_0_207, carry_0_207;
assign {carry_0_207, res_0_207} = pps_i[1][65] + pps_i[2][63] + pps_i[3][61];
wire res_0_208, carry_0_208;
assign {carry_0_208, res_0_208} = pps_i[4][59] + pps_i[5][57] + pps_i[6][55];
wire res_0_209, carry_0_209;
assign {carry_0_209, res_0_209} = pps_i[1][66] + pps_i[2][64] + pps_i[3][62];
wire res_0_210, carry_0_210;
assign {carry_0_210, res_0_210} = pps_i[4][60] + pps_i[5][58];
wire res_0_211, carry_0_211;
assign {carry_0_211, res_0_211} = pps_i[2][65] + pps_i[3][63] + pps_i[4][61];
wire res_0_212, carry_0_212;
assign {carry_0_212, res_0_212} = pps_i[2][66] + pps_i[3][64];
wire res_1_0, carry_1_0;
assign {carry_1_0, res_1_0} = acc_a_i[8] + acc_b_i[8];
wire res_1_1, carry_1_1;
assign {carry_1_1, res_1_1} = acc_a_i[9] + acc_b_i[9];
wire res_1_2, carry_1_2;
assign {carry_1_2, res_1_2} = acc_a_i[10] + acc_b_i[10] + pps_i[0][8];
wire res_1_3, carry_1_3;
assign {carry_1_3, res_1_3} = pps_i[1][6] + pps_i[2][4];
wire res_1_4, carry_1_4;
assign {carry_1_4, res_1_4} = acc_a_i[11] + acc_b_i[11] + pps_i[0][9];
wire res_1_5, carry_1_5;
assign {carry_1_5, res_1_5} = pps_i[1][7] + pps_i[2][5];
wire res_1_6, carry_1_6;
assign {carry_1_6, res_1_6} = acc_a_i[12] + acc_b_i[12] + pps_i[0][10];
wire res_1_7, carry_1_7;
assign {carry_1_7, res_1_7} = pps_i[1][8] + pps_i[2][6] + pps_i[3][4];
wire res_1_8, carry_1_8;
assign {carry_1_8, res_1_8} = pps_i[4][2] + pps_i[5][0];
wire res_1_9, carry_1_9;
assign {carry_1_9, res_1_9} = acc_a_i[13] + acc_b_i[13] + pps_i[0][11];
wire res_1_10, carry_1_10;
assign {carry_1_10, res_1_10} = pps_i[1][9] + pps_i[2][7] + pps_i[3][5];
wire res_1_11, carry_1_11;
assign {carry_1_11, res_1_11} = pps_i[4][3] + pps_i[5][1];
wire res_1_12, carry_1_12;
assign {carry_1_12, res_1_12} = pps_i[0][12] + pps_i[1][10] + pps_i[2][8];
wire res_1_13, carry_1_13;
assign {carry_1_13, res_1_13} = pps_i[3][6] + pps_i[4][4] + pps_i[5][2];
wire res_1_14, carry_1_14;
assign {carry_1_14, res_1_14} = pps_i[6][0] + sign_correction_i[7] + res_0_0;
wire res_1_15, carry_1_15;
assign {carry_1_15, res_1_15} = pps_i[0][13] + pps_i[1][11] + pps_i[2][9];
wire res_1_16, carry_1_16;
assign {carry_1_16, res_1_16} = pps_i[3][7] + pps_i[4][5] + pps_i[5][3];
wire res_1_17, carry_1_17;
assign {carry_1_17, res_1_17} = pps_i[6][1] + carry_0_0 + res_0_1;
wire res_1_18, carry_1_18;
assign {carry_1_18, res_1_18} = pps_i[3][8] + pps_i[4][6] + pps_i[5][4];
wire res_1_19, carry_1_19;
assign {carry_1_19, res_1_19} = pps_i[6][2] + pps_i[7][0] + sign_correction_i[8];
wire res_1_20, carry_1_20;
assign {carry_1_20, res_1_20} = carry_0_1 + res_0_2 + res_0_3;
wire res_1_21, carry_1_21;
assign {carry_1_21, res_1_21} = pps_i[3][9] + pps_i[4][7] + pps_i[5][5];
wire res_1_22, carry_1_22;
assign {carry_1_22, res_1_22} = pps_i[6][3] + pps_i[7][1] + carry_0_2;
wire res_1_23, carry_1_23;
assign {carry_1_23, res_1_23} = carry_0_3 + res_0_4 + res_0_5;
wire res_1_24, carry_1_24;
assign {carry_1_24, res_1_24} = pps_i[6][4] + pps_i[7][2] + pps_i[8][0];
wire res_1_25, carry_1_25;
assign {carry_1_25, res_1_25} = sign_correction_i[9] + carry_0_4 + carry_0_5;
wire res_1_26, carry_1_26;
assign {carry_1_26, res_1_26} = res_0_6 + res_0_7 + res_0_8;
wire res_1_27, carry_1_27;
assign {carry_1_27, res_1_27} = pps_i[6][5] + pps_i[7][3] + pps_i[8][1];
wire res_1_28, carry_1_28;
assign {carry_1_28, res_1_28} = carry_0_6 + carry_0_7 + carry_0_8;
wire res_1_29, carry_1_29;
assign {carry_1_29, res_1_29} = res_0_9 + res_0_10 + res_0_11;
wire res_1_30, carry_1_30;
assign {carry_1_30, res_1_30} = pps_i[9][0] + sign_correction_i[10] + carry_0_9;
wire res_1_31, carry_1_31;
assign {carry_1_31, res_1_31} = carry_0_10 + carry_0_11 + res_0_12;
wire res_1_32, carry_1_32;
assign {carry_1_32, res_1_32} = res_0_13 + res_0_14 + res_0_15;
wire res_1_33, carry_1_33;
assign {carry_1_33, res_1_33} = pps_i[9][1] + carry_0_12 + carry_0_13;
wire res_1_34, carry_1_34;
assign {carry_1_34, res_1_34} = carry_0_14 + carry_0_15 + res_0_16;
wire res_1_35, carry_1_35;
assign {carry_1_35, res_1_35} = res_0_17 + res_0_18 + res_0_19;
wire res_1_36, carry_1_36;
assign {carry_1_36, res_1_36} = pps_i[10][0] + carry_0_16 + carry_0_17;
wire res_1_37, carry_1_37;
assign {carry_1_37, res_1_37} = carry_0_18 + carry_0_19 + res_0_20;
wire res_1_38, carry_1_38;
assign {carry_1_38, res_1_38} = res_0_21 + res_0_22 + res_0_23;
wire res_1_39, carry_1_39;
assign {carry_1_39, res_1_39} = pps_i[10][1] + carry_0_20 + carry_0_21;
wire res_1_40, carry_1_40;
assign {carry_1_40, res_1_40} = carry_0_22 + carry_0_23 + res_0_24;
wire res_1_41, carry_1_41;
assign {carry_1_41, res_1_41} = res_0_25 + res_0_26 + res_0_27;
wire res_1_42, carry_1_42;
assign {carry_1_42, res_1_42} = pps_i[10][2] + carry_0_24 + carry_0_25;
wire res_1_43, carry_1_43;
assign {carry_1_43, res_1_43} = carry_0_26 + carry_0_27 + res_0_28;
wire res_1_44, carry_1_44;
assign {carry_1_44, res_1_44} = res_0_29 + res_0_30 + res_0_31;
wire res_1_45, carry_1_45;
assign {carry_1_45, res_1_45} = pps_i[10][3] + carry_0_28 + carry_0_29;
wire res_1_46, carry_1_46;
assign {carry_1_46, res_1_46} = carry_0_30 + carry_0_31 + res_0_32;
wire res_1_47, carry_1_47;
assign {carry_1_47, res_1_47} = res_0_33 + res_0_34 + res_0_35;
wire res_1_48, carry_1_48;
assign {carry_1_48, res_1_48} = pps_i[10][4] + carry_0_32 + carry_0_33;
wire res_1_49, carry_1_49;
assign {carry_1_49, res_1_49} = carry_0_34 + carry_0_35 + res_0_36;
wire res_1_50, carry_1_50;
assign {carry_1_50, res_1_50} = res_0_37 + res_0_38 + res_0_39;
wire res_1_51, carry_1_51;
assign {carry_1_51, res_1_51} = pps_i[10][5] + carry_0_36 + carry_0_37;
wire res_1_52, carry_1_52;
assign {carry_1_52, res_1_52} = carry_0_38 + carry_0_39 + res_0_40;
wire res_1_53, carry_1_53;
assign {carry_1_53, res_1_53} = res_0_41 + res_0_42 + res_0_43;
wire res_1_54, carry_1_54;
assign {carry_1_54, res_1_54} = pps_i[10][6] + carry_0_40 + carry_0_41;
wire res_1_55, carry_1_55;
assign {carry_1_55, res_1_55} = carry_0_42 + carry_0_43 + res_0_44;
wire res_1_56, carry_1_56;
assign {carry_1_56, res_1_56} = res_0_45 + res_0_46 + res_0_47;
wire res_1_57, carry_1_57;
assign {carry_1_57, res_1_57} = pps_i[10][7] + carry_0_44 + carry_0_45;
wire res_1_58, carry_1_58;
assign {carry_1_58, res_1_58} = carry_0_46 + carry_0_47 + res_0_48;
wire res_1_59, carry_1_59;
assign {carry_1_59, res_1_59} = res_0_49 + res_0_50 + res_0_51;
wire res_1_60, carry_1_60;
assign {carry_1_60, res_1_60} = pps_i[10][8] + carry_0_48 + carry_0_49;
wire res_1_61, carry_1_61;
assign {carry_1_61, res_1_61} = carry_0_50 + carry_0_51 + res_0_52;
wire res_1_62, carry_1_62;
assign {carry_1_62, res_1_62} = res_0_53 + res_0_54 + res_0_55;
wire res_1_63, carry_1_63;
assign {carry_1_63, res_1_63} = pps_i[10][9] + carry_0_52 + carry_0_53;
wire res_1_64, carry_1_64;
assign {carry_1_64, res_1_64} = carry_0_54 + carry_0_55 + res_0_56;
wire res_1_65, carry_1_65;
assign {carry_1_65, res_1_65} = res_0_57 + res_0_58 + res_0_59;
wire res_1_66, carry_1_66;
assign {carry_1_66, res_1_66} = pps_i[10][10] + carry_0_56 + carry_0_57;
wire res_1_67, carry_1_67;
assign {carry_1_67, res_1_67} = carry_0_58 + carry_0_59 + res_0_60;
wire res_1_68, carry_1_68;
assign {carry_1_68, res_1_68} = res_0_61 + res_0_62 + res_0_63;
wire res_1_69, carry_1_69;
assign {carry_1_69, res_1_69} = pps_i[10][11] + carry_0_60 + carry_0_61;
wire res_1_70, carry_1_70;
assign {carry_1_70, res_1_70} = carry_0_62 + carry_0_63 + res_0_64;
wire res_1_71, carry_1_71;
assign {carry_1_71, res_1_71} = res_0_65 + res_0_66 + res_0_67;
wire res_1_72, carry_1_72;
assign {carry_1_72, res_1_72} = pps_i[10][12] + carry_0_64 + carry_0_65;
wire res_1_73, carry_1_73;
assign {carry_1_73, res_1_73} = carry_0_66 + carry_0_67 + res_0_68;
wire res_1_74, carry_1_74;
assign {carry_1_74, res_1_74} = res_0_69 + res_0_70 + res_0_71;
wire res_1_75, carry_1_75;
assign {carry_1_75, res_1_75} = pps_i[10][13] + carry_0_68 + carry_0_69;
wire res_1_76, carry_1_76;
assign {carry_1_76, res_1_76} = carry_0_70 + carry_0_71 + res_0_72;
wire res_1_77, carry_1_77;
assign {carry_1_77, res_1_77} = res_0_73 + res_0_74 + res_0_75;
wire res_1_78, carry_1_78;
assign {carry_1_78, res_1_78} = pps_i[10][14] + carry_0_72 + carry_0_73;
wire res_1_79, carry_1_79;
assign {carry_1_79, res_1_79} = carry_0_74 + carry_0_75 + res_0_76;
wire res_1_80, carry_1_80;
assign {carry_1_80, res_1_80} = res_0_77 + res_0_78 + res_0_79;
wire res_1_81, carry_1_81;
assign {carry_1_81, res_1_81} = pps_i[10][15] + carry_0_76 + carry_0_77;
wire res_1_82, carry_1_82;
assign {carry_1_82, res_1_82} = carry_0_78 + carry_0_79 + res_0_80;
wire res_1_83, carry_1_83;
assign {carry_1_83, res_1_83} = res_0_81 + res_0_82 + res_0_83;
wire res_1_84, carry_1_84;
assign {carry_1_84, res_1_84} = pps_i[10][16] + carry_0_80 + carry_0_81;
wire res_1_85, carry_1_85;
assign {carry_1_85, res_1_85} = carry_0_82 + carry_0_83 + res_0_84;
wire res_1_86, carry_1_86;
assign {carry_1_86, res_1_86} = res_0_85 + res_0_86 + res_0_87;
wire res_1_87, carry_1_87;
assign {carry_1_87, res_1_87} = pps_i[10][17] + carry_0_84 + carry_0_85;
wire res_1_88, carry_1_88;
assign {carry_1_88, res_1_88} = carry_0_86 + carry_0_87 + res_0_88;
wire res_1_89, carry_1_89;
assign {carry_1_89, res_1_89} = res_0_89 + res_0_90 + res_0_91;
wire res_1_90, carry_1_90;
assign {carry_1_90, res_1_90} = pps_i[10][18] + carry_0_88 + carry_0_89;
wire res_1_91, carry_1_91;
assign {carry_1_91, res_1_91} = carry_0_90 + carry_0_91 + res_0_92;
wire res_1_92, carry_1_92;
assign {carry_1_92, res_1_92} = res_0_93 + res_0_94 + res_0_95;
wire res_1_93, carry_1_93;
assign {carry_1_93, res_1_93} = pps_i[10][19] + carry_0_92 + carry_0_93;
wire res_1_94, carry_1_94;
assign {carry_1_94, res_1_94} = carry_0_94 + carry_0_95 + res_0_96;
wire res_1_95, carry_1_95;
assign {carry_1_95, res_1_95} = res_0_97 + res_0_98 + res_0_99;
wire res_1_96, carry_1_96;
assign {carry_1_96, res_1_96} = pps_i[10][20] + carry_0_96 + carry_0_97;
wire res_1_97, carry_1_97;
assign {carry_1_97, res_1_97} = carry_0_98 + carry_0_99 + res_0_100;
wire res_1_98, carry_1_98;
assign {carry_1_98, res_1_98} = res_0_101 + res_0_102 + res_0_103;
wire res_1_99, carry_1_99;
assign {carry_1_99, res_1_99} = pps_i[10][21] + carry_0_100 + carry_0_101;
wire res_1_100, carry_1_100;
assign {carry_1_100, res_1_100} = carry_0_102 + carry_0_103 + res_0_104;
wire res_1_101, carry_1_101;
assign {carry_1_101, res_1_101} = res_0_105 + res_0_106 + res_0_107;
wire res_1_102, carry_1_102;
assign {carry_1_102, res_1_102} = pps_i[10][22] + carry_0_104 + carry_0_105;
wire res_1_103, carry_1_103;
assign {carry_1_103, res_1_103} = carry_0_106 + carry_0_107 + res_0_108;
wire res_1_104, carry_1_104;
assign {carry_1_104, res_1_104} = res_0_109 + res_0_110 + res_0_111;
wire res_1_105, carry_1_105;
assign {carry_1_105, res_1_105} = pps_i[10][23] + carry_0_108 + carry_0_109;
wire res_1_106, carry_1_106;
assign {carry_1_106, res_1_106} = carry_0_110 + carry_0_111 + res_0_112;
wire res_1_107, carry_1_107;
assign {carry_1_107, res_1_107} = res_0_113 + res_0_114 + res_0_115;
wire res_1_108, carry_1_108;
assign {carry_1_108, res_1_108} = pps_i[10][24] + carry_0_112 + carry_0_113;
wire res_1_109, carry_1_109;
assign {carry_1_109, res_1_109} = carry_0_114 + carry_0_115 + res_0_116;
wire res_1_110, carry_1_110;
assign {carry_1_110, res_1_110} = res_0_117 + res_0_118 + res_0_119;
wire res_1_111, carry_1_111;
assign {carry_1_111, res_1_111} = pps_i[10][25] + carry_0_116 + carry_0_117;
wire res_1_112, carry_1_112;
assign {carry_1_112, res_1_112} = carry_0_118 + carry_0_119 + res_0_120;
wire res_1_113, carry_1_113;
assign {carry_1_113, res_1_113} = res_0_121 + res_0_122 + res_0_123;
wire res_1_114, carry_1_114;
assign {carry_1_114, res_1_114} = pps_i[10][26] + carry_0_120 + carry_0_121;
wire res_1_115, carry_1_115;
assign {carry_1_115, res_1_115} = carry_0_122 + carry_0_123 + res_0_124;
wire res_1_116, carry_1_116;
assign {carry_1_116, res_1_116} = res_0_125 + res_0_126 + res_0_127;
wire res_1_117, carry_1_117;
assign {carry_1_117, res_1_117} = pps_i[10][27] + carry_0_124 + carry_0_125;
wire res_1_118, carry_1_118;
assign {carry_1_118, res_1_118} = carry_0_126 + carry_0_127 + res_0_128;
wire res_1_119, carry_1_119;
assign {carry_1_119, res_1_119} = res_0_129 + res_0_130 + res_0_131;
wire res_1_120, carry_1_120;
assign {carry_1_120, res_1_120} = pps_i[10][28] + carry_0_128 + carry_0_129;
wire res_1_121, carry_1_121;
assign {carry_1_121, res_1_121} = carry_0_130 + carry_0_131 + res_0_132;
wire res_1_122, carry_1_122;
assign {carry_1_122, res_1_122} = res_0_133 + res_0_134 + res_0_135;
wire res_1_123, carry_1_123;
assign {carry_1_123, res_1_123} = pps_i[10][29] + carry_0_132 + carry_0_133;
wire res_1_124, carry_1_124;
assign {carry_1_124, res_1_124} = carry_0_134 + carry_0_135 + res_0_136;
wire res_1_125, carry_1_125;
assign {carry_1_125, res_1_125} = res_0_137 + res_0_138 + res_0_139;
wire res_1_126, carry_1_126;
assign {carry_1_126, res_1_126} = pps_i[10][30] + carry_0_136 + carry_0_137;
wire res_1_127, carry_1_127;
assign {carry_1_127, res_1_127} = carry_0_138 + carry_0_139 + res_0_140;
wire res_1_128, carry_1_128;
assign {carry_1_128, res_1_128} = res_0_141 + res_0_142 + res_0_143;
wire res_1_129, carry_1_129;
assign {carry_1_129, res_1_129} = pps_i[10][31] + carry_0_140 + carry_0_141;
wire res_1_130, carry_1_130;
assign {carry_1_130, res_1_130} = carry_0_142 + carry_0_143 + res_0_144;
wire res_1_131, carry_1_131;
assign {carry_1_131, res_1_131} = res_0_145 + res_0_146 + res_0_147;
wire res_1_132, carry_1_132;
assign {carry_1_132, res_1_132} = pps_i[10][32] + carry_0_144 + carry_0_145;
wire res_1_133, carry_1_133;
assign {carry_1_133, res_1_133} = carry_0_146 + carry_0_147 + res_0_148;
wire res_1_134, carry_1_134;
assign {carry_1_134, res_1_134} = res_0_149 + res_0_150 + res_0_151;
wire res_1_135, carry_1_135;
assign {carry_1_135, res_1_135} = pps_i[10][33] + carry_0_148 + carry_0_149;
wire res_1_136, carry_1_136;
assign {carry_1_136, res_1_136} = carry_0_150 + carry_0_151 + res_0_152;
wire res_1_137, carry_1_137;
assign {carry_1_137, res_1_137} = res_0_153 + res_0_154 + res_0_155;
wire res_1_138, carry_1_138;
assign {carry_1_138, res_1_138} = pps_i[10][34] + carry_0_152 + carry_0_153;
wire res_1_139, carry_1_139;
assign {carry_1_139, res_1_139} = carry_0_154 + carry_0_155 + res_0_156;
wire res_1_140, carry_1_140;
assign {carry_1_140, res_1_140} = res_0_157 + res_0_158 + res_0_159;
wire res_1_141, carry_1_141;
assign {carry_1_141, res_1_141} = pps_i[10][35] + carry_0_156 + carry_0_157;
wire res_1_142, carry_1_142;
assign {carry_1_142, res_1_142} = carry_0_158 + carry_0_159 + res_0_160;
wire res_1_143, carry_1_143;
assign {carry_1_143, res_1_143} = res_0_161 + res_0_162 + res_0_163;
wire res_1_144, carry_1_144;
assign {carry_1_144, res_1_144} = pps_i[10][36] + carry_0_160 + carry_0_161;
wire res_1_145, carry_1_145;
assign {carry_1_145, res_1_145} = carry_0_162 + carry_0_163 + res_0_164;
wire res_1_146, carry_1_146;
assign {carry_1_146, res_1_146} = res_0_165 + res_0_166 + res_0_167;
wire res_1_147, carry_1_147;
assign {carry_1_147, res_1_147} = pps_i[10][37] + carry_0_164 + carry_0_165;
wire res_1_148, carry_1_148;
assign {carry_1_148, res_1_148} = carry_0_166 + carry_0_167 + res_0_168;
wire res_1_149, carry_1_149;
assign {carry_1_149, res_1_149} = res_0_169 + res_0_170 + res_0_171;
wire res_1_150, carry_1_150;
assign {carry_1_150, res_1_150} = pps_i[10][38] + carry_0_168 + carry_0_169;
wire res_1_151, carry_1_151;
assign {carry_1_151, res_1_151} = carry_0_170 + carry_0_171 + res_0_172;
wire res_1_152, carry_1_152;
assign {carry_1_152, res_1_152} = res_0_173 + res_0_174 + res_0_175;
wire res_1_153, carry_1_153;
assign {carry_1_153, res_1_153} = pps_i[10][39] + carry_0_172 + carry_0_173;
wire res_1_154, carry_1_154;
assign {carry_1_154, res_1_154} = carry_0_174 + carry_0_175 + res_0_176;
wire res_1_155, carry_1_155;
assign {carry_1_155, res_1_155} = res_0_177 + res_0_178 + res_0_179;
wire res_1_156, carry_1_156;
assign {carry_1_156, res_1_156} = pps_i[10][40] + carry_0_176 + carry_0_177;
wire res_1_157, carry_1_157;
assign {carry_1_157, res_1_157} = carry_0_178 + carry_0_179 + res_0_180;
wire res_1_158, carry_1_158;
assign {carry_1_158, res_1_158} = res_0_181 + res_0_182 + res_0_183;
wire res_1_159, carry_1_159;
assign {carry_1_159, res_1_159} = pps_i[10][41] + carry_0_180 + carry_0_181;
wire res_1_160, carry_1_160;
assign {carry_1_160, res_1_160} = carry_0_182 + carry_0_183 + res_0_184;
wire res_1_161, carry_1_161;
assign {carry_1_161, res_1_161} = res_0_185 + res_0_186 + res_0_187;
wire res_1_162, carry_1_162;
assign {carry_1_162, res_1_162} = pps_i[10][42] + carry_0_184 + carry_0_185;
wire res_1_163, carry_1_163;
assign {carry_1_163, res_1_163} = carry_0_186 + carry_0_187 + res_0_188;
wire res_1_164, carry_1_164;
assign {carry_1_164, res_1_164} = res_0_189 + res_0_190 + res_0_191;
wire res_1_165, carry_1_165;
assign {carry_1_165, res_1_165} = pps_i[10][43] + carry_0_188 + carry_0_189;
wire res_1_166, carry_1_166;
assign {carry_1_166, res_1_166} = carry_0_190 + carry_0_191 + res_0_192;
wire res_1_167, carry_1_167;
assign {carry_1_167, res_1_167} = res_0_193 + res_0_194 + res_0_195;
wire res_1_168, carry_1_168;
assign {carry_1_168, res_1_168} = pps_i[10][44] + carry_0_192 + carry_0_193;
wire res_1_169, carry_1_169;
assign {carry_1_169, res_1_169} = carry_0_194 + carry_0_195 + res_0_196;
wire res_1_170, carry_1_170;
assign {carry_1_170, res_1_170} = res_0_197 + res_0_198 + res_0_199;
wire res_1_171, carry_1_171;
assign {carry_1_171, res_1_171} = pps_i[10][45] + carry_0_196 + carry_0_197;
wire res_1_172, carry_1_172;
assign {carry_1_172, res_1_172} = carry_0_198 + carry_0_199 + res_0_200;
wire res_1_173, carry_1_173;
assign {carry_1_173, res_1_173} = res_0_201 + res_0_202 + res_0_203;
wire res_1_174, carry_1_174;
assign {carry_1_174, res_1_174} = pps_i[9][48] + pps_i[10][46] + carry_0_200;
wire res_1_175, carry_1_175;
assign {carry_1_175, res_1_175} = carry_0_201 + carry_0_202 + carry_0_203;
wire res_1_176, carry_1_176;
assign {carry_1_176, res_1_176} = res_0_204 + res_0_205 + res_0_206;
wire res_1_177, carry_1_177;
assign {carry_1_177, res_1_177} = pps_i[7][53] + pps_i[8][51] + pps_i[9][49];
wire res_1_178, carry_1_178;
assign {carry_1_178, res_1_178} = pps_i[10][47] + carry_0_204 + carry_0_205;
wire res_1_179, carry_1_179;
assign {carry_1_179, res_1_179} = carry_0_206 + res_0_207 + res_0_208;
wire res_1_180, carry_1_180;
assign {carry_1_180, res_1_180} = pps_i[6][56] + pps_i[7][54] + pps_i[8][52];
wire res_1_181, carry_1_181;
assign {carry_1_181, res_1_181} = pps_i[9][50] + pps_i[10][48] + carry_0_207;
wire res_1_182, carry_1_182;
assign {carry_1_182, res_1_182} = carry_0_208 + res_0_209 + res_0_210;
wire res_1_183, carry_1_183;
assign {carry_1_183, res_1_183} = pps_i[5][59] + pps_i[6][57] + pps_i[7][55];
wire res_1_184, carry_1_184;
assign {carry_1_184, res_1_184} = pps_i[8][53] + pps_i[9][51] + pps_i[10][49];
wire res_1_185, carry_1_185;
assign {carry_1_185, res_1_185} = carry_0_209 + carry_0_210 + res_0_211;
wire res_1_186, carry_1_186;
assign {carry_1_186, res_1_186} = pps_i[4][62] + pps_i[5][60] + pps_i[6][58];
wire res_1_187, carry_1_187;
assign {carry_1_187, res_1_187} = pps_i[7][56] + pps_i[8][54] + pps_i[9][52];
wire res_1_188, carry_1_188;
assign {carry_1_188, res_1_188} = pps_i[10][50] + carry_0_211 + res_0_212;
wire res_1_189, carry_1_189;
assign {carry_1_189, res_1_189} = pps_i[3][65] + pps_i[4][63] + pps_i[5][61];
wire res_1_190, carry_1_190;
assign {carry_1_190, res_1_190} = pps_i[6][59] + pps_i[7][57] + pps_i[8][55];
wire res_1_191, carry_1_191;
assign {carry_1_191, res_1_191} = pps_i[9][53] + pps_i[10][51] + carry_0_212;
wire res_1_192, carry_1_192;
assign {carry_1_192, res_1_192} = pps_i[3][66] + pps_i[4][64] + pps_i[5][62];
wire res_1_193, carry_1_193;
assign {carry_1_193, res_1_193} = pps_i[6][60] + pps_i[7][58] + pps_i[8][56];
wire res_1_194, carry_1_194;
assign {carry_1_194, res_1_194} = pps_i[9][54] + pps_i[10][52];
wire res_1_195, carry_1_195;
assign {carry_1_195, res_1_195} = pps_i[4][65] + pps_i[5][63] + pps_i[6][61];
wire res_1_196, carry_1_196;
assign {carry_1_196, res_1_196} = pps_i[7][59] + pps_i[8][57] + pps_i[9][55];
wire res_1_197, carry_1_197;
assign {carry_1_197, res_1_197} = pps_i[4][66] + pps_i[5][64] + pps_i[6][62];
wire res_1_198, carry_1_198;
assign {carry_1_198, res_1_198} = pps_i[7][60] + pps_i[8][58];
wire res_1_199, carry_1_199;
assign {carry_1_199, res_1_199} = pps_i[5][65] + pps_i[6][63] + pps_i[7][61];
wire res_1_200, carry_1_200;
assign {carry_1_200, res_1_200} = pps_i[5][66] + pps_i[6][64];
wire res_2_0, carry_2_0;
assign {carry_2_0, res_2_0} = acc_a_i[4] + acc_b_i[4];
wire res_2_1, carry_2_1;
assign {carry_2_1, res_2_1} = acc_a_i[5] + acc_b_i[5];
wire res_2_2, carry_2_2;
assign {carry_2_2, res_2_2} = acc_a_i[6] + acc_b_i[6] + pps_i[0][4];
wire res_2_3, carry_2_3;
assign {carry_2_3, res_2_3} = pps_i[1][2] + pps_i[2][0];
wire res_2_4, carry_2_4;
assign {carry_2_4, res_2_4} = acc_a_i[7] + acc_b_i[7] + pps_i[0][5];
wire res_2_5, carry_2_5;
assign {carry_2_5, res_2_5} = pps_i[1][3] + pps_i[2][1];
wire res_2_6, carry_2_6;
assign {carry_2_6, res_2_6} = pps_i[0][6] + pps_i[1][4] + pps_i[2][2];
wire res_2_7, carry_2_7;
assign {carry_2_7, res_2_7} = pps_i[3][0] + sign_correction_i[4] + res_1_0;
wire res_2_8, carry_2_8;
assign {carry_2_8, res_2_8} = pps_i[0][7] + pps_i[1][5] + pps_i[2][3];
wire res_2_9, carry_2_9;
assign {carry_2_9, res_2_9} = pps_i[3][1] + carry_1_0 + res_1_1;
wire res_2_10, carry_2_10;
assign {carry_2_10, res_2_10} = pps_i[3][2] + pps_i[4][0] + sign_correction_i[5];
wire res_2_11, carry_2_11;
assign {carry_2_11, res_2_11} = carry_1_1 + res_1_2 + res_1_3;
wire res_2_12, carry_2_12;
assign {carry_2_12, res_2_12} = pps_i[3][3] + pps_i[4][1] + carry_1_2;
wire res_2_13, carry_2_13;
assign {carry_2_13, res_2_13} = carry_1_3 + res_1_4 + res_1_5;
wire res_2_14, carry_2_14;
assign {carry_2_14, res_2_14} = sign_correction_i[6] + carry_1_4 + carry_1_5;
wire res_2_15, carry_2_15;
assign {carry_2_15, res_2_15} = res_1_6 + res_1_7 + res_1_8;
wire res_2_16, carry_2_16;
assign {carry_2_16, res_2_16} = carry_1_6 + carry_1_7 + carry_1_8;
wire res_2_17, carry_2_17;
assign {carry_2_17, res_2_17} = res_1_9 + res_1_10 + res_1_11;
wire res_2_18, carry_2_18;
assign {carry_2_18, res_2_18} = carry_1_9 + carry_1_10 + carry_1_11;
wire res_2_19, carry_2_19;
assign {carry_2_19, res_2_19} = res_1_12 + res_1_13 + res_1_14;
wire res_2_20, carry_2_20;
assign {carry_2_20, res_2_20} = carry_1_12 + carry_1_13 + carry_1_14;
wire res_2_21, carry_2_21;
assign {carry_2_21, res_2_21} = res_1_15 + res_1_16 + res_1_17;
wire res_2_22, carry_2_22;
assign {carry_2_22, res_2_22} = carry_1_15 + carry_1_16 + carry_1_17;
wire res_2_23, carry_2_23;
assign {carry_2_23, res_2_23} = res_1_18 + res_1_19 + res_1_20;
wire res_2_24, carry_2_24;
assign {carry_2_24, res_2_24} = carry_1_18 + carry_1_19 + carry_1_20;
wire res_2_25, carry_2_25;
assign {carry_2_25, res_2_25} = res_1_21 + res_1_22 + res_1_23;
wire res_2_26, carry_2_26;
assign {carry_2_26, res_2_26} = carry_1_21 + carry_1_22 + carry_1_23;
wire res_2_27, carry_2_27;
assign {carry_2_27, res_2_27} = res_1_24 + res_1_25 + res_1_26;
wire res_2_28, carry_2_28;
assign {carry_2_28, res_2_28} = carry_1_24 + carry_1_25 + carry_1_26;
wire res_2_29, carry_2_29;
assign {carry_2_29, res_2_29} = res_1_27 + res_1_28 + res_1_29;
wire res_2_30, carry_2_30;
assign {carry_2_30, res_2_30} = carry_1_27 + carry_1_28 + carry_1_29;
wire res_2_31, carry_2_31;
assign {carry_2_31, res_2_31} = res_1_30 + res_1_31 + res_1_32;
wire res_2_32, carry_2_32;
assign {carry_2_32, res_2_32} = carry_1_30 + carry_1_31 + carry_1_32;
wire res_2_33, carry_2_33;
assign {carry_2_33, res_2_33} = res_1_33 + res_1_34 + res_1_35;
wire res_2_34, carry_2_34;
assign {carry_2_34, res_2_34} = carry_1_33 + carry_1_34 + carry_1_35;
wire res_2_35, carry_2_35;
assign {carry_2_35, res_2_35} = res_1_36 + res_1_37 + res_1_38;
wire res_2_36, carry_2_36;
assign {carry_2_36, res_2_36} = carry_1_36 + carry_1_37 + carry_1_38;
wire res_2_37, carry_2_37;
assign {carry_2_37, res_2_37} = res_1_39 + res_1_40 + res_1_41;
wire res_2_38, carry_2_38;
assign {carry_2_38, res_2_38} = carry_1_39 + carry_1_40 + carry_1_41;
wire res_2_39, carry_2_39;
assign {carry_2_39, res_2_39} = res_1_42 + res_1_43 + res_1_44;
wire res_2_40, carry_2_40;
assign {carry_2_40, res_2_40} = carry_1_42 + carry_1_43 + carry_1_44;
wire res_2_41, carry_2_41;
assign {carry_2_41, res_2_41} = res_1_45 + res_1_46 + res_1_47;
wire res_2_42, carry_2_42;
assign {carry_2_42, res_2_42} = carry_1_45 + carry_1_46 + carry_1_47;
wire res_2_43, carry_2_43;
assign {carry_2_43, res_2_43} = res_1_48 + res_1_49 + res_1_50;
wire res_2_44, carry_2_44;
assign {carry_2_44, res_2_44} = carry_1_48 + carry_1_49 + carry_1_50;
wire res_2_45, carry_2_45;
assign {carry_2_45, res_2_45} = res_1_51 + res_1_52 + res_1_53;
wire res_2_46, carry_2_46;
assign {carry_2_46, res_2_46} = carry_1_51 + carry_1_52 + carry_1_53;
wire res_2_47, carry_2_47;
assign {carry_2_47, res_2_47} = res_1_54 + res_1_55 + res_1_56;
wire res_2_48, carry_2_48;
assign {carry_2_48, res_2_48} = carry_1_54 + carry_1_55 + carry_1_56;
wire res_2_49, carry_2_49;
assign {carry_2_49, res_2_49} = res_1_57 + res_1_58 + res_1_59;
wire res_2_50, carry_2_50;
assign {carry_2_50, res_2_50} = carry_1_57 + carry_1_58 + carry_1_59;
wire res_2_51, carry_2_51;
assign {carry_2_51, res_2_51} = res_1_60 + res_1_61 + res_1_62;
wire res_2_52, carry_2_52;
assign {carry_2_52, res_2_52} = carry_1_60 + carry_1_61 + carry_1_62;
wire res_2_53, carry_2_53;
assign {carry_2_53, res_2_53} = res_1_63 + res_1_64 + res_1_65;
wire res_2_54, carry_2_54;
assign {carry_2_54, res_2_54} = carry_1_63 + carry_1_64 + carry_1_65;
wire res_2_55, carry_2_55;
assign {carry_2_55, res_2_55} = res_1_66 + res_1_67 + res_1_68;
wire res_2_56, carry_2_56;
assign {carry_2_56, res_2_56} = carry_1_66 + carry_1_67 + carry_1_68;
wire res_2_57, carry_2_57;
assign {carry_2_57, res_2_57} = res_1_69 + res_1_70 + res_1_71;
wire res_2_58, carry_2_58;
assign {carry_2_58, res_2_58} = carry_1_69 + carry_1_70 + carry_1_71;
wire res_2_59, carry_2_59;
assign {carry_2_59, res_2_59} = res_1_72 + res_1_73 + res_1_74;
wire res_2_60, carry_2_60;
assign {carry_2_60, res_2_60} = carry_1_72 + carry_1_73 + carry_1_74;
wire res_2_61, carry_2_61;
assign {carry_2_61, res_2_61} = res_1_75 + res_1_76 + res_1_77;
wire res_2_62, carry_2_62;
assign {carry_2_62, res_2_62} = carry_1_75 + carry_1_76 + carry_1_77;
wire res_2_63, carry_2_63;
assign {carry_2_63, res_2_63} = res_1_78 + res_1_79 + res_1_80;
wire res_2_64, carry_2_64;
assign {carry_2_64, res_2_64} = carry_1_78 + carry_1_79 + carry_1_80;
wire res_2_65, carry_2_65;
assign {carry_2_65, res_2_65} = res_1_81 + res_1_82 + res_1_83;
wire res_2_66, carry_2_66;
assign {carry_2_66, res_2_66} = carry_1_81 + carry_1_82 + carry_1_83;
wire res_2_67, carry_2_67;
assign {carry_2_67, res_2_67} = res_1_84 + res_1_85 + res_1_86;
wire res_2_68, carry_2_68;
assign {carry_2_68, res_2_68} = carry_1_84 + carry_1_85 + carry_1_86;
wire res_2_69, carry_2_69;
assign {carry_2_69, res_2_69} = res_1_87 + res_1_88 + res_1_89;
wire res_2_70, carry_2_70;
assign {carry_2_70, res_2_70} = carry_1_87 + carry_1_88 + carry_1_89;
wire res_2_71, carry_2_71;
assign {carry_2_71, res_2_71} = res_1_90 + res_1_91 + res_1_92;
wire res_2_72, carry_2_72;
assign {carry_2_72, res_2_72} = carry_1_90 + carry_1_91 + carry_1_92;
wire res_2_73, carry_2_73;
assign {carry_2_73, res_2_73} = res_1_93 + res_1_94 + res_1_95;
wire res_2_74, carry_2_74;
assign {carry_2_74, res_2_74} = carry_1_93 + carry_1_94 + carry_1_95;
wire res_2_75, carry_2_75;
assign {carry_2_75, res_2_75} = res_1_96 + res_1_97 + res_1_98;
wire res_2_76, carry_2_76;
assign {carry_2_76, res_2_76} = carry_1_96 + carry_1_97 + carry_1_98;
wire res_2_77, carry_2_77;
assign {carry_2_77, res_2_77} = res_1_99 + res_1_100 + res_1_101;
wire res_2_78, carry_2_78;
assign {carry_2_78, res_2_78} = carry_1_99 + carry_1_100 + carry_1_101;
wire res_2_79, carry_2_79;
assign {carry_2_79, res_2_79} = res_1_102 + res_1_103 + res_1_104;
wire res_2_80, carry_2_80;
assign {carry_2_80, res_2_80} = carry_1_102 + carry_1_103 + carry_1_104;
wire res_2_81, carry_2_81;
assign {carry_2_81, res_2_81} = res_1_105 + res_1_106 + res_1_107;
wire res_2_82, carry_2_82;
assign {carry_2_82, res_2_82} = carry_1_105 + carry_1_106 + carry_1_107;
wire res_2_83, carry_2_83;
assign {carry_2_83, res_2_83} = res_1_108 + res_1_109 + res_1_110;
wire res_2_84, carry_2_84;
assign {carry_2_84, res_2_84} = carry_1_108 + carry_1_109 + carry_1_110;
wire res_2_85, carry_2_85;
assign {carry_2_85, res_2_85} = res_1_111 + res_1_112 + res_1_113;
wire res_2_86, carry_2_86;
assign {carry_2_86, res_2_86} = carry_1_111 + carry_1_112 + carry_1_113;
wire res_2_87, carry_2_87;
assign {carry_2_87, res_2_87} = res_1_114 + res_1_115 + res_1_116;
wire res_2_88, carry_2_88;
assign {carry_2_88, res_2_88} = carry_1_114 + carry_1_115 + carry_1_116;
wire res_2_89, carry_2_89;
assign {carry_2_89, res_2_89} = res_1_117 + res_1_118 + res_1_119;
wire res_2_90, carry_2_90;
assign {carry_2_90, res_2_90} = carry_1_117 + carry_1_118 + carry_1_119;
wire res_2_91, carry_2_91;
assign {carry_2_91, res_2_91} = res_1_120 + res_1_121 + res_1_122;
wire res_2_92, carry_2_92;
assign {carry_2_92, res_2_92} = carry_1_120 + carry_1_121 + carry_1_122;
wire res_2_93, carry_2_93;
assign {carry_2_93, res_2_93} = res_1_123 + res_1_124 + res_1_125;
wire res_2_94, carry_2_94;
assign {carry_2_94, res_2_94} = carry_1_123 + carry_1_124 + carry_1_125;
wire res_2_95, carry_2_95;
assign {carry_2_95, res_2_95} = res_1_126 + res_1_127 + res_1_128;
wire res_2_96, carry_2_96;
assign {carry_2_96, res_2_96} = carry_1_126 + carry_1_127 + carry_1_128;
wire res_2_97, carry_2_97;
assign {carry_2_97, res_2_97} = res_1_129 + res_1_130 + res_1_131;
wire res_2_98, carry_2_98;
assign {carry_2_98, res_2_98} = carry_1_129 + carry_1_130 + carry_1_131;
wire res_2_99, carry_2_99;
assign {carry_2_99, res_2_99} = res_1_132 + res_1_133 + res_1_134;
wire res_2_100, carry_2_100;
assign {carry_2_100, res_2_100} = carry_1_132 + carry_1_133 + carry_1_134;
wire res_2_101, carry_2_101;
assign {carry_2_101, res_2_101} = res_1_135 + res_1_136 + res_1_137;
wire res_2_102, carry_2_102;
assign {carry_2_102, res_2_102} = carry_1_135 + carry_1_136 + carry_1_137;
wire res_2_103, carry_2_103;
assign {carry_2_103, res_2_103} = res_1_138 + res_1_139 + res_1_140;
wire res_2_104, carry_2_104;
assign {carry_2_104, res_2_104} = carry_1_138 + carry_1_139 + carry_1_140;
wire res_2_105, carry_2_105;
assign {carry_2_105, res_2_105} = res_1_141 + res_1_142 + res_1_143;
wire res_2_106, carry_2_106;
assign {carry_2_106, res_2_106} = carry_1_141 + carry_1_142 + carry_1_143;
wire res_2_107, carry_2_107;
assign {carry_2_107, res_2_107} = res_1_144 + res_1_145 + res_1_146;
wire res_2_108, carry_2_108;
assign {carry_2_108, res_2_108} = carry_1_144 + carry_1_145 + carry_1_146;
wire res_2_109, carry_2_109;
assign {carry_2_109, res_2_109} = res_1_147 + res_1_148 + res_1_149;
wire res_2_110, carry_2_110;
assign {carry_2_110, res_2_110} = carry_1_147 + carry_1_148 + carry_1_149;
wire res_2_111, carry_2_111;
assign {carry_2_111, res_2_111} = res_1_150 + res_1_151 + res_1_152;
wire res_2_112, carry_2_112;
assign {carry_2_112, res_2_112} = carry_1_150 + carry_1_151 + carry_1_152;
wire res_2_113, carry_2_113;
assign {carry_2_113, res_2_113} = res_1_153 + res_1_154 + res_1_155;
wire res_2_114, carry_2_114;
assign {carry_2_114, res_2_114} = carry_1_153 + carry_1_154 + carry_1_155;
wire res_2_115, carry_2_115;
assign {carry_2_115, res_2_115} = res_1_156 + res_1_157 + res_1_158;
wire res_2_116, carry_2_116;
assign {carry_2_116, res_2_116} = carry_1_156 + carry_1_157 + carry_1_158;
wire res_2_117, carry_2_117;
assign {carry_2_117, res_2_117} = res_1_159 + res_1_160 + res_1_161;
wire res_2_118, carry_2_118;
assign {carry_2_118, res_2_118} = carry_1_159 + carry_1_160 + carry_1_161;
wire res_2_119, carry_2_119;
assign {carry_2_119, res_2_119} = res_1_162 + res_1_163 + res_1_164;
wire res_2_120, carry_2_120;
assign {carry_2_120, res_2_120} = carry_1_162 + carry_1_163 + carry_1_164;
wire res_2_121, carry_2_121;
assign {carry_2_121, res_2_121} = res_1_165 + res_1_166 + res_1_167;
wire res_2_122, carry_2_122;
assign {carry_2_122, res_2_122} = carry_1_165 + carry_1_166 + carry_1_167;
wire res_2_123, carry_2_123;
assign {carry_2_123, res_2_123} = res_1_168 + res_1_169 + res_1_170;
wire res_2_124, carry_2_124;
assign {carry_2_124, res_2_124} = carry_1_168 + carry_1_169 + carry_1_170;
wire res_2_125, carry_2_125;
assign {carry_2_125, res_2_125} = res_1_171 + res_1_172 + res_1_173;
wire res_2_126, carry_2_126;
assign {carry_2_126, res_2_126} = carry_1_171 + carry_1_172 + carry_1_173;
wire res_2_127, carry_2_127;
assign {carry_2_127, res_2_127} = res_1_174 + res_1_175 + res_1_176;
wire res_2_128, carry_2_128;
assign {carry_2_128, res_2_128} = carry_1_174 + carry_1_175 + carry_1_176;
wire res_2_129, carry_2_129;
assign {carry_2_129, res_2_129} = res_1_177 + res_1_178 + res_1_179;
wire res_2_130, carry_2_130;
assign {carry_2_130, res_2_130} = carry_1_177 + carry_1_178 + carry_1_179;
wire res_2_131, carry_2_131;
assign {carry_2_131, res_2_131} = res_1_180 + res_1_181 + res_1_182;
wire res_2_132, carry_2_132;
assign {carry_2_132, res_2_132} = carry_1_180 + carry_1_181 + carry_1_182;
wire res_2_133, carry_2_133;
assign {carry_2_133, res_2_133} = res_1_183 + res_1_184 + res_1_185;
wire res_2_134, carry_2_134;
assign {carry_2_134, res_2_134} = carry_1_183 + carry_1_184 + carry_1_185;
wire res_2_135, carry_2_135;
assign {carry_2_135, res_2_135} = res_1_186 + res_1_187 + res_1_188;
wire res_2_136, carry_2_136;
assign {carry_2_136, res_2_136} = carry_1_186 + carry_1_187 + carry_1_188;
wire res_2_137, carry_2_137;
assign {carry_2_137, res_2_137} = res_1_189 + res_1_190 + res_1_191;
wire res_2_138, carry_2_138;
assign {carry_2_138, res_2_138} = carry_1_189 + carry_1_190 + carry_1_191;
wire res_2_139, carry_2_139;
assign {carry_2_139, res_2_139} = res_1_192 + res_1_193 + res_1_194;
wire res_2_140, carry_2_140;
assign {carry_2_140, res_2_140} = pps_i[10][53] + carry_1_192 + carry_1_193;
wire res_2_141, carry_2_141;
assign {carry_2_141, res_2_141} = carry_1_194 + res_1_195 + res_1_196;
wire res_2_142, carry_2_142;
assign {carry_2_142, res_2_142} = pps_i[9][56] + pps_i[10][54] + carry_1_195;
wire res_2_143, carry_2_143;
assign {carry_2_143, res_2_143} = carry_1_196 + res_1_197 + res_1_198;
wire res_2_144, carry_2_144;
assign {carry_2_144, res_2_144} = pps_i[8][59] + pps_i[9][57] + pps_i[10][55];
wire res_2_145, carry_2_145;
assign {carry_2_145, res_2_145} = carry_1_197 + carry_1_198 + res_1_199;
wire res_2_146, carry_2_146;
assign {carry_2_146, res_2_146} = pps_i[7][62] + pps_i[8][60] + pps_i[9][58];
wire res_2_147, carry_2_147;
assign {carry_2_147, res_2_147} = pps_i[10][56] + carry_1_199 + res_1_200;
wire res_2_148, carry_2_148;
assign {carry_2_148, res_2_148} = pps_i[6][65] + pps_i[7][63] + pps_i[8][61];
wire res_2_149, carry_2_149;
assign {carry_2_149, res_2_149} = pps_i[9][59] + pps_i[10][57] + carry_1_200;
wire res_2_150, carry_2_150;
assign {carry_2_150, res_2_150} = pps_i[6][66] + pps_i[7][64] + pps_i[8][62];
wire res_2_151, carry_2_151;
assign {carry_2_151, res_2_151} = pps_i[9][60] + pps_i[10][58];
wire res_2_152, carry_2_152;
assign {carry_2_152, res_2_152} = pps_i[7][65] + pps_i[8][63] + pps_i[9][61];
wire res_2_153, carry_2_153;
assign {carry_2_153, res_2_153} = pps_i[7][66] + pps_i[8][64];
wire res_3_0, carry_3_0;
assign {carry_3_0, res_3_0} = acc_a_i[2] + acc_b_i[2];
wire res_3_1, carry_3_1;
assign {carry_3_1, res_3_1} = acc_a_i[3] + acc_b_i[3];
wire res_3_2, carry_3_2;
assign {carry_3_2, res_3_2} = pps_i[0][2] + pps_i[1][0] + sign_correction_i[2];
wire res_3_3, carry_3_3;
assign {carry_3_3, res_3_3} = pps_i[0][3] + pps_i[1][1] + carry_2_0;
wire res_3_4, carry_3_4;
assign {carry_3_4, res_3_4} = sign_correction_i[3] + carry_2_1 + res_2_2;
wire res_3_5, carry_3_5;
assign {carry_3_5, res_3_5} = carry_2_2 + carry_2_3 + res_2_4;
wire res_3_6, carry_3_6;
assign {carry_3_6, res_3_6} = carry_2_4 + carry_2_5 + res_2_6;
wire res_3_7, carry_3_7;
assign {carry_3_7, res_3_7} = carry_2_6 + carry_2_7 + res_2_8;
wire res_3_8, carry_3_8;
assign {carry_3_8, res_3_8} = carry_2_8 + carry_2_9 + res_2_10;
wire res_3_9, carry_3_9;
assign {carry_3_9, res_3_9} = carry_2_10 + carry_2_11 + res_2_12;
wire res_3_10, carry_3_10;
assign {carry_3_10, res_3_10} = carry_2_12 + carry_2_13 + res_2_14;
wire res_3_11, carry_3_11;
assign {carry_3_11, res_3_11} = carry_2_14 + carry_2_15 + res_2_16;
wire res_3_12, carry_3_12;
assign {carry_3_12, res_3_12} = carry_2_16 + carry_2_17 + res_2_18;
wire res_3_13, carry_3_13;
assign {carry_3_13, res_3_13} = carry_2_18 + carry_2_19 + res_2_20;
wire res_3_14, carry_3_14;
assign {carry_3_14, res_3_14} = carry_2_20 + carry_2_21 + res_2_22;
wire res_3_15, carry_3_15;
assign {carry_3_15, res_3_15} = carry_2_22 + carry_2_23 + res_2_24;
wire res_3_16, carry_3_16;
assign {carry_3_16, res_3_16} = carry_2_24 + carry_2_25 + res_2_26;
wire res_3_17, carry_3_17;
assign {carry_3_17, res_3_17} = carry_2_26 + carry_2_27 + res_2_28;
wire res_3_18, carry_3_18;
assign {carry_3_18, res_3_18} = carry_2_28 + carry_2_29 + res_2_30;
wire res_3_19, carry_3_19;
assign {carry_3_19, res_3_19} = carry_2_30 + carry_2_31 + res_2_32;
wire res_3_20, carry_3_20;
assign {carry_3_20, res_3_20} = carry_2_32 + carry_2_33 + res_2_34;
wire res_3_21, carry_3_21;
assign {carry_3_21, res_3_21} = carry_2_34 + carry_2_35 + res_2_36;
wire res_3_22, carry_3_22;
assign {carry_3_22, res_3_22} = carry_2_36 + carry_2_37 + res_2_38;
wire res_3_23, carry_3_23;
assign {carry_3_23, res_3_23} = carry_2_38 + carry_2_39 + res_2_40;
wire res_3_24, carry_3_24;
assign {carry_3_24, res_3_24} = carry_2_40 + carry_2_41 + res_2_42;
wire res_3_25, carry_3_25;
assign {carry_3_25, res_3_25} = carry_2_42 + carry_2_43 + res_2_44;
wire res_3_26, carry_3_26;
assign {carry_3_26, res_3_26} = carry_2_44 + carry_2_45 + res_2_46;
wire res_3_27, carry_3_27;
assign {carry_3_27, res_3_27} = carry_2_46 + carry_2_47 + res_2_48;
wire res_3_28, carry_3_28;
assign {carry_3_28, res_3_28} = carry_2_48 + carry_2_49 + res_2_50;
wire res_3_29, carry_3_29;
assign {carry_3_29, res_3_29} = carry_2_50 + carry_2_51 + res_2_52;
wire res_3_30, carry_3_30;
assign {carry_3_30, res_3_30} = carry_2_52 + carry_2_53 + res_2_54;
wire res_3_31, carry_3_31;
assign {carry_3_31, res_3_31} = carry_2_54 + carry_2_55 + res_2_56;
wire res_3_32, carry_3_32;
assign {carry_3_32, res_3_32} = carry_2_56 + carry_2_57 + res_2_58;
wire res_3_33, carry_3_33;
assign {carry_3_33, res_3_33} = carry_2_58 + carry_2_59 + res_2_60;
wire res_3_34, carry_3_34;
assign {carry_3_34, res_3_34} = carry_2_60 + carry_2_61 + res_2_62;
wire res_3_35, carry_3_35;
assign {carry_3_35, res_3_35} = carry_2_62 + carry_2_63 + res_2_64;
wire res_3_36, carry_3_36;
assign {carry_3_36, res_3_36} = carry_2_64 + carry_2_65 + res_2_66;
wire res_3_37, carry_3_37;
assign {carry_3_37, res_3_37} = carry_2_66 + carry_2_67 + res_2_68;
wire res_3_38, carry_3_38;
assign {carry_3_38, res_3_38} = carry_2_68 + carry_2_69 + res_2_70;
wire res_3_39, carry_3_39;
assign {carry_3_39, res_3_39} = carry_2_70 + carry_2_71 + res_2_72;
wire res_3_40, carry_3_40;
assign {carry_3_40, res_3_40} = carry_2_72 + carry_2_73 + res_2_74;
wire res_3_41, carry_3_41;
assign {carry_3_41, res_3_41} = carry_2_74 + carry_2_75 + res_2_76;
wire res_3_42, carry_3_42;
assign {carry_3_42, res_3_42} = carry_2_76 + carry_2_77 + res_2_78;
wire res_3_43, carry_3_43;
assign {carry_3_43, res_3_43} = carry_2_78 + carry_2_79 + res_2_80;
wire res_3_44, carry_3_44;
assign {carry_3_44, res_3_44} = carry_2_80 + carry_2_81 + res_2_82;
wire res_3_45, carry_3_45;
assign {carry_3_45, res_3_45} = carry_2_82 + carry_2_83 + res_2_84;
wire res_3_46, carry_3_46;
assign {carry_3_46, res_3_46} = carry_2_84 + carry_2_85 + res_2_86;
wire res_3_47, carry_3_47;
assign {carry_3_47, res_3_47} = carry_2_86 + carry_2_87 + res_2_88;
wire res_3_48, carry_3_48;
assign {carry_3_48, res_3_48} = carry_2_88 + carry_2_89 + res_2_90;
wire res_3_49, carry_3_49;
assign {carry_3_49, res_3_49} = carry_2_90 + carry_2_91 + res_2_92;
wire res_3_50, carry_3_50;
assign {carry_3_50, res_3_50} = carry_2_92 + carry_2_93 + res_2_94;
wire res_3_51, carry_3_51;
assign {carry_3_51, res_3_51} = carry_2_94 + carry_2_95 + res_2_96;
wire res_3_52, carry_3_52;
assign {carry_3_52, res_3_52} = carry_2_96 + carry_2_97 + res_2_98;
wire res_3_53, carry_3_53;
assign {carry_3_53, res_3_53} = carry_2_98 + carry_2_99 + res_2_100;
wire res_3_54, carry_3_54;
assign {carry_3_54, res_3_54} = carry_2_100 + carry_2_101 + res_2_102;
wire res_3_55, carry_3_55;
assign {carry_3_55, res_3_55} = carry_2_102 + carry_2_103 + res_2_104;
wire res_3_56, carry_3_56;
assign {carry_3_56, res_3_56} = carry_2_104 + carry_2_105 + res_2_106;
wire res_3_57, carry_3_57;
assign {carry_3_57, res_3_57} = carry_2_106 + carry_2_107 + res_2_108;
wire res_3_58, carry_3_58;
assign {carry_3_58, res_3_58} = carry_2_108 + carry_2_109 + res_2_110;
wire res_3_59, carry_3_59;
assign {carry_3_59, res_3_59} = carry_2_110 + carry_2_111 + res_2_112;
wire res_3_60, carry_3_60;
assign {carry_3_60, res_3_60} = carry_2_112 + carry_2_113 + res_2_114;
wire res_3_61, carry_3_61;
assign {carry_3_61, res_3_61} = carry_2_114 + carry_2_115 + res_2_116;
wire res_3_62, carry_3_62;
assign {carry_3_62, res_3_62} = carry_2_116 + carry_2_117 + res_2_118;
wire res_3_63, carry_3_63;
assign {carry_3_63, res_3_63} = carry_2_118 + carry_2_119 + res_2_120;
wire res_3_64, carry_3_64;
assign {carry_3_64, res_3_64} = carry_2_120 + carry_2_121 + res_2_122;
wire res_3_65, carry_3_65;
assign {carry_3_65, res_3_65} = carry_2_122 + carry_2_123 + res_2_124;
wire res_3_66, carry_3_66;
assign {carry_3_66, res_3_66} = carry_2_124 + carry_2_125 + res_2_126;
wire res_3_67, carry_3_67;
assign {carry_3_67, res_3_67} = carry_2_126 + carry_2_127 + res_2_128;
wire res_3_68, carry_3_68;
assign {carry_3_68, res_3_68} = carry_2_128 + carry_2_129 + res_2_130;
wire res_3_69, carry_3_69;
assign {carry_3_69, res_3_69} = carry_2_130 + carry_2_131 + res_2_132;
wire res_3_70, carry_3_70;
assign {carry_3_70, res_3_70} = carry_2_132 + carry_2_133 + res_2_134;
wire res_3_71, carry_3_71;
assign {carry_3_71, res_3_71} = carry_2_134 + carry_2_135 + res_2_136;
wire res_3_72, carry_3_72;
assign {carry_3_72, res_3_72} = carry_2_136 + carry_2_137 + res_2_138;
wire res_3_73, carry_3_73;
assign {carry_3_73, res_3_73} = carry_2_138 + carry_2_139 + res_2_140;
wire res_3_74, carry_3_74;
assign {carry_3_74, res_3_74} = carry_2_140 + carry_2_141 + res_2_142;
wire res_3_75, carry_3_75;
assign {carry_3_75, res_3_75} = carry_2_142 + carry_2_143 + res_2_144;
wire res_3_76, carry_3_76;
assign {carry_3_76, res_3_76} = carry_2_144 + carry_2_145 + res_2_146;
wire res_3_77, carry_3_77;
assign {carry_3_77, res_3_77} = carry_2_146 + carry_2_147 + res_2_148;
wire res_3_78, carry_3_78;
assign {carry_3_78, res_3_78} = carry_2_148 + carry_2_149 + res_2_150;
wire res_3_79, carry_3_79;
assign {carry_3_79, res_3_79} = pps_i[10][59] + carry_2_150 + carry_2_151;
wire res_3_80, carry_3_80;
assign {carry_3_80, res_3_80} = pps_i[9][62] + pps_i[10][60] + carry_2_152;
wire res_3_81, carry_3_81;
assign {carry_3_81, res_3_81} = pps_i[8][65] + pps_i[9][63] + pps_i[10][61];
wire res_3_82, carry_3_82;
assign {carry_3_82, res_3_82} = pps_i[8][66] + pps_i[9][64];
wire res_4_0, carry_4_0;
assign {carry_4_0, res_4_0} = acc_a_i[0] + acc_b_i[0];
wire res_4_1, carry_4_1;
assign {carry_4_1, res_4_1} = acc_a_i[1] + acc_b_i[1];
wire res_4_2, carry_4_2;
assign {carry_4_2, res_4_2} = pps_i[0][0] + sign_correction_i[1] + res_3_0;
wire res_4_3, carry_4_3;
assign {carry_4_3, res_4_3} = pps_i[0][1] + carry_3_0 + res_3_1;
wire res_4_4, carry_4_4;
assign {carry_4_4, res_4_4} = res_2_0 + carry_3_1 + res_3_2;
wire res_4_5, carry_4_5;
assign {carry_4_5, res_4_5} = res_2_1 + carry_3_2 + res_3_3;
wire res_4_6, carry_4_6;
assign {carry_4_6, res_4_6} = res_2_3 + carry_3_3 + res_3_4;
wire res_4_7, carry_4_7;
assign {carry_4_7, res_4_7} = res_2_5 + carry_3_4 + res_3_5;
wire res_4_8, carry_4_8;
assign {carry_4_8, res_4_8} = res_2_7 + carry_3_5 + res_3_6;
wire res_4_9, carry_4_9;
assign {carry_4_9, res_4_9} = res_2_9 + carry_3_6 + res_3_7;
wire res_4_10, carry_4_10;
assign {carry_4_10, res_4_10} = res_2_11 + carry_3_7 + res_3_8;
wire res_4_11, carry_4_11;
assign {carry_4_11, res_4_11} = res_2_13 + carry_3_8 + res_3_9;
wire res_4_12, carry_4_12;
assign {carry_4_12, res_4_12} = res_2_15 + carry_3_9 + res_3_10;
wire res_4_13, carry_4_13;
assign {carry_4_13, res_4_13} = res_2_17 + carry_3_10 + res_3_11;
wire res_4_14, carry_4_14;
assign {carry_4_14, res_4_14} = res_2_19 + carry_3_11 + res_3_12;
wire res_4_15, carry_4_15;
assign {carry_4_15, res_4_15} = res_2_21 + carry_3_12 + res_3_13;
wire res_4_16, carry_4_16;
assign {carry_4_16, res_4_16} = res_2_23 + carry_3_13 + res_3_14;
wire res_4_17, carry_4_17;
assign {carry_4_17, res_4_17} = res_2_25 + carry_3_14 + res_3_15;
wire res_4_18, carry_4_18;
assign {carry_4_18, res_4_18} = res_2_27 + carry_3_15 + res_3_16;
wire res_4_19, carry_4_19;
assign {carry_4_19, res_4_19} = res_2_29 + carry_3_16 + res_3_17;
wire res_4_20, carry_4_20;
assign {carry_4_20, res_4_20} = res_2_31 + carry_3_17 + res_3_18;
wire res_4_21, carry_4_21;
assign {carry_4_21, res_4_21} = res_2_33 + carry_3_18 + res_3_19;
wire res_4_22, carry_4_22;
assign {carry_4_22, res_4_22} = res_2_35 + carry_3_19 + res_3_20;
wire res_4_23, carry_4_23;
assign {carry_4_23, res_4_23} = res_2_37 + carry_3_20 + res_3_21;
wire res_4_24, carry_4_24;
assign {carry_4_24, res_4_24} = res_2_39 + carry_3_21 + res_3_22;
wire res_4_25, carry_4_25;
assign {carry_4_25, res_4_25} = res_2_41 + carry_3_22 + res_3_23;
wire res_4_26, carry_4_26;
assign {carry_4_26, res_4_26} = res_2_43 + carry_3_23 + res_3_24;
wire res_4_27, carry_4_27;
assign {carry_4_27, res_4_27} = res_2_45 + carry_3_24 + res_3_25;
wire res_4_28, carry_4_28;
assign {carry_4_28, res_4_28} = res_2_47 + carry_3_25 + res_3_26;
wire res_4_29, carry_4_29;
assign {carry_4_29, res_4_29} = res_2_49 + carry_3_26 + res_3_27;
wire res_4_30, carry_4_30;
assign {carry_4_30, res_4_30} = res_2_51 + carry_3_27 + res_3_28;
wire res_4_31, carry_4_31;
assign {carry_4_31, res_4_31} = res_2_53 + carry_3_28 + res_3_29;
wire res_4_32, carry_4_32;
assign {carry_4_32, res_4_32} = res_2_55 + carry_3_29 + res_3_30;
wire res_4_33, carry_4_33;
assign {carry_4_33, res_4_33} = res_2_57 + carry_3_30 + res_3_31;
wire res_4_34, carry_4_34;
assign {carry_4_34, res_4_34} = res_2_59 + carry_3_31 + res_3_32;
wire res_4_35, carry_4_35;
assign {carry_4_35, res_4_35} = res_2_61 + carry_3_32 + res_3_33;
wire res_4_36, carry_4_36;
assign {carry_4_36, res_4_36} = res_2_63 + carry_3_33 + res_3_34;
wire res_4_37, carry_4_37;
assign {carry_4_37, res_4_37} = res_2_65 + carry_3_34 + res_3_35;
wire res_4_38, carry_4_38;
assign {carry_4_38, res_4_38} = res_2_67 + carry_3_35 + res_3_36;
wire res_4_39, carry_4_39;
assign {carry_4_39, res_4_39} = res_2_69 + carry_3_36 + res_3_37;
wire res_4_40, carry_4_40;
assign {carry_4_40, res_4_40} = res_2_71 + carry_3_37 + res_3_38;
wire res_4_41, carry_4_41;
assign {carry_4_41, res_4_41} = res_2_73 + carry_3_38 + res_3_39;
wire res_4_42, carry_4_42;
assign {carry_4_42, res_4_42} = res_2_75 + carry_3_39 + res_3_40;
wire res_4_43, carry_4_43;
assign {carry_4_43, res_4_43} = res_2_77 + carry_3_40 + res_3_41;
wire res_4_44, carry_4_44;
assign {carry_4_44, res_4_44} = res_2_79 + carry_3_41 + res_3_42;
wire res_4_45, carry_4_45;
assign {carry_4_45, res_4_45} = res_2_81 + carry_3_42 + res_3_43;
wire res_4_46, carry_4_46;
assign {carry_4_46, res_4_46} = res_2_83 + carry_3_43 + res_3_44;
wire res_4_47, carry_4_47;
assign {carry_4_47, res_4_47} = res_2_85 + carry_3_44 + res_3_45;
wire res_4_48, carry_4_48;
assign {carry_4_48, res_4_48} = res_2_87 + carry_3_45 + res_3_46;
wire res_4_49, carry_4_49;
assign {carry_4_49, res_4_49} = res_2_89 + carry_3_46 + res_3_47;
wire res_4_50, carry_4_50;
assign {carry_4_50, res_4_50} = res_2_91 + carry_3_47 + res_3_48;
wire res_4_51, carry_4_51;
assign {carry_4_51, res_4_51} = res_2_93 + carry_3_48 + res_3_49;
wire res_4_52, carry_4_52;
assign {carry_4_52, res_4_52} = res_2_95 + carry_3_49 + res_3_50;
wire res_4_53, carry_4_53;
assign {carry_4_53, res_4_53} = res_2_97 + carry_3_50 + res_3_51;
wire res_4_54, carry_4_54;
assign {carry_4_54, res_4_54} = res_2_99 + carry_3_51 + res_3_52;
wire res_4_55, carry_4_55;
assign {carry_4_55, res_4_55} = res_2_101 + carry_3_52 + res_3_53;
wire res_4_56, carry_4_56;
assign {carry_4_56, res_4_56} = res_2_103 + carry_3_53 + res_3_54;
wire res_4_57, carry_4_57;
assign {carry_4_57, res_4_57} = res_2_105 + carry_3_54 + res_3_55;
wire res_4_58, carry_4_58;
assign {carry_4_58, res_4_58} = res_2_107 + carry_3_55 + res_3_56;
wire res_4_59, carry_4_59;
assign {carry_4_59, res_4_59} = res_2_109 + carry_3_56 + res_3_57;
wire res_4_60, carry_4_60;
assign {carry_4_60, res_4_60} = res_2_111 + carry_3_57 + res_3_58;
wire res_4_61, carry_4_61;
assign {carry_4_61, res_4_61} = res_2_113 + carry_3_58 + res_3_59;
wire res_4_62, carry_4_62;
assign {carry_4_62, res_4_62} = res_2_115 + carry_3_59 + res_3_60;
wire res_4_63, carry_4_63;
assign {carry_4_63, res_4_63} = res_2_117 + carry_3_60 + res_3_61;
wire res_4_64, carry_4_64;
assign {carry_4_64, res_4_64} = res_2_119 + carry_3_61 + res_3_62;
wire res_4_65, carry_4_65;
assign {carry_4_65, res_4_65} = res_2_121 + carry_3_62 + res_3_63;
wire res_4_66, carry_4_66;
assign {carry_4_66, res_4_66} = res_2_123 + carry_3_63 + res_3_64;
wire res_4_67, carry_4_67;
assign {carry_4_67, res_4_67} = res_2_125 + carry_3_64 + res_3_65;
wire res_4_68, carry_4_68;
assign {carry_4_68, res_4_68} = res_2_127 + carry_3_65 + res_3_66;
wire res_4_69, carry_4_69;
assign {carry_4_69, res_4_69} = res_2_129 + carry_3_66 + res_3_67;
wire res_4_70, carry_4_70;
assign {carry_4_70, res_4_70} = res_2_131 + carry_3_67 + res_3_68;
wire res_4_71, carry_4_71;
assign {carry_4_71, res_4_71} = res_2_133 + carry_3_68 + res_3_69;
wire res_4_72, carry_4_72;
assign {carry_4_72, res_4_72} = res_2_135 + carry_3_69 + res_3_70;
wire res_4_73, carry_4_73;
assign {carry_4_73, res_4_73} = res_2_137 + carry_3_70 + res_3_71;
wire res_4_74, carry_4_74;
assign {carry_4_74, res_4_74} = res_2_139 + carry_3_71 + res_3_72;
wire res_4_75, carry_4_75;
assign {carry_4_75, res_4_75} = res_2_141 + carry_3_72 + res_3_73;
wire res_4_76, carry_4_76;
assign {carry_4_76, res_4_76} = res_2_143 + carry_3_73 + res_3_74;
wire res_4_77, carry_4_77;
assign {carry_4_77, res_4_77} = res_2_145 + carry_3_74 + res_3_75;
wire res_4_78, carry_4_78;
assign {carry_4_78, res_4_78} = res_2_147 + carry_3_75 + res_3_76;
wire res_4_79, carry_4_79;
assign {carry_4_79, res_4_79} = res_2_149 + carry_3_76 + res_3_77;
wire res_4_80, carry_4_80;
assign {carry_4_80, res_4_80} = res_2_151 + carry_3_77 + res_3_78;
wire res_4_81, carry_4_81;
assign {carry_4_81, res_4_81} = res_2_152 + carry_3_78 + res_3_79;
wire res_4_82, carry_4_82;
assign {carry_4_82, res_4_82} = res_2_153 + carry_3_79 + res_3_80;
wire res_4_83, carry_4_83;
assign {carry_4_83, res_4_83} = carry_2_153 + carry_3_80 + res_3_81;
wire res_4_84, carry_4_84;
assign {carry_4_84, res_4_84} = pps_i[10][62] + carry_3_81 + res_3_82;
wire res_4_85, carry_4_85;
assign {carry_4_85, res_4_85} = pps_i[9][65] + pps_i[10][63] + carry_3_82;
wire res_4_86, carry_4_86;
assign {carry_4_86, res_4_86} = pps_i[9][66] + pps_i[10][64];
assign resA_o[0] = sign_correction_i[0];
assign resB_o[0] = res_4_0;
assign resA_o[1] = carry_4_0;
assign resB_o[1] = res_4_1;
assign resA_o[2] = carry_4_1;
assign resB_o[2] = res_4_2;
assign resA_o[3] = carry_4_2;
assign resB_o[3] = res_4_3;
assign resA_o[4] = carry_4_3;
assign resB_o[4] = res_4_4;
assign resA_o[5] = carry_4_4;
assign resB_o[5] = res_4_5;
assign resA_o[6] = carry_4_5;
assign resB_o[6] = res_4_6;
assign resA_o[7] = carry_4_6;
assign resB_o[7] = res_4_7;
assign resA_o[8] = carry_4_7;
assign resB_o[8] = res_4_8;
assign resA_o[9] = carry_4_8;
assign resB_o[9] = res_4_9;
assign resA_o[10] = carry_4_9;
assign resB_o[10] = res_4_10;
assign resA_o[11] = carry_4_10;
assign resB_o[11] = res_4_11;
assign resA_o[12] = carry_4_11;
assign resB_o[12] = res_4_12;
assign resA_o[13] = carry_4_12;
assign resB_o[13] = res_4_13;
assign resA_o[14] = carry_4_13;
assign resB_o[14] = res_4_14;
assign resA_o[15] = carry_4_14;
assign resB_o[15] = res_4_15;
assign resA_o[16] = carry_4_15;
assign resB_o[16] = res_4_16;
assign resA_o[17] = carry_4_16;
assign resB_o[17] = res_4_17;
assign resA_o[18] = carry_4_17;
assign resB_o[18] = res_4_18;
assign resA_o[19] = carry_4_18;
assign resB_o[19] = res_4_19;
assign resA_o[20] = carry_4_19;
assign resB_o[20] = res_4_20;
assign resA_o[21] = carry_4_20;
assign resB_o[21] = res_4_21;
assign resA_o[22] = carry_4_21;
assign resB_o[22] = res_4_22;
assign resA_o[23] = carry_4_22;
assign resB_o[23] = res_4_23;
assign resA_o[24] = carry_4_23;
assign resB_o[24] = res_4_24;
assign resA_o[25] = carry_4_24;
assign resB_o[25] = res_4_25;
assign resA_o[26] = carry_4_25;
assign resB_o[26] = res_4_26;
assign resA_o[27] = carry_4_26;
assign resB_o[27] = res_4_27;
assign resA_o[28] = carry_4_27;
assign resB_o[28] = res_4_28;
assign resA_o[29] = carry_4_28;
assign resB_o[29] = res_4_29;
assign resA_o[30] = carry_4_29;
assign resB_o[30] = res_4_30;
assign resA_o[31] = carry_4_30;
assign resB_o[31] = res_4_31;
assign resA_o[32] = carry_4_31;
assign resB_o[32] = res_4_32;
assign resA_o[33] = carry_4_32;
assign resB_o[33] = res_4_33;
assign resA_o[34] = carry_4_33;
assign resB_o[34] = res_4_34;
assign resA_o[35] = carry_4_34;
assign resB_o[35] = res_4_35;
assign resA_o[36] = carry_4_35;
assign resB_o[36] = res_4_36;
assign resA_o[37] = carry_4_36;
assign resB_o[37] = res_4_37;
assign resA_o[38] = carry_4_37;
assign resB_o[38] = res_4_38;
assign resA_o[39] = carry_4_38;
assign resB_o[39] = res_4_39;
assign resA_o[40] = carry_4_39;
assign resB_o[40] = res_4_40;
assign resA_o[41] = carry_4_40;
assign resB_o[41] = res_4_41;
assign resA_o[42] = carry_4_41;
assign resB_o[42] = res_4_42;
assign resA_o[43] = carry_4_42;
assign resB_o[43] = res_4_43;
assign resA_o[44] = carry_4_43;
assign resB_o[44] = res_4_44;
assign resA_o[45] = carry_4_44;
assign resB_o[45] = res_4_45;
assign resA_o[46] = carry_4_45;
assign resB_o[46] = res_4_46;
assign resA_o[47] = carry_4_46;
assign resB_o[47] = res_4_47;
assign resA_o[48] = carry_4_47;
assign resB_o[48] = res_4_48;
assign resA_o[49] = carry_4_48;
assign resB_o[49] = res_4_49;
assign resA_o[50] = carry_4_49;
assign resB_o[50] = res_4_50;
assign resA_o[51] = carry_4_50;
assign resB_o[51] = res_4_51;
assign resA_o[52] = carry_4_51;
assign resB_o[52] = res_4_52;
assign resA_o[53] = carry_4_52;
assign resB_o[53] = res_4_53;
assign resA_o[54] = carry_4_53;
assign resB_o[54] = res_4_54;
assign resA_o[55] = carry_4_54;
assign resB_o[55] = res_4_55;
assign resA_o[56] = carry_4_55;
assign resB_o[56] = res_4_56;
assign resA_o[57] = carry_4_56;
assign resB_o[57] = res_4_57;
assign resA_o[58] = carry_4_57;
assign resB_o[58] = res_4_58;
assign resA_o[59] = carry_4_58;
assign resB_o[59] = res_4_59;
assign resA_o[60] = carry_4_59;
assign resB_o[60] = res_4_60;
assign resA_o[61] = carry_4_60;
assign resB_o[61] = res_4_61;
assign resA_o[62] = carry_4_61;
assign resB_o[62] = res_4_62;
assign resA_o[63] = carry_4_62;
assign resB_o[63] = res_4_63;
assign resA_o[64] = carry_4_63;
assign resB_o[64] = res_4_64;
assign resA_o[65] = carry_4_64;
assign resB_o[65] = res_4_65;
assign resA_o[66] = carry_4_65;
assign resB_o[66] = res_4_66;
assign resA_o[67] = carry_4_66;
assign resB_o[67] = res_4_67;
assign resA_o[68] = carry_4_67;
assign resB_o[68] = res_4_68;
assign resA_o[69] = carry_4_68;
assign resB_o[69] = res_4_69;
assign resA_o[70] = carry_4_69;
assign resB_o[70] = res_4_70;
assign resA_o[71] = carry_4_70;
assign resB_o[71] = res_4_71;
assign resA_o[72] = carry_4_71;
assign resB_o[72] = res_4_72;
assign resA_o[73] = carry_4_72;
assign resB_o[73] = res_4_73;
assign resA_o[74] = carry_4_73;
assign resB_o[74] = res_4_74;
assign resA_o[75] = carry_4_74;
assign resB_o[75] = res_4_75;
assign resA_o[76] = carry_4_75;
assign resB_o[76] = res_4_76;
assign resA_o[77] = carry_4_76;
assign resB_o[77] = res_4_77;
assign resA_o[78] = carry_4_77;
assign resB_o[78] = res_4_78;
assign resA_o[79] = carry_4_78;
assign resB_o[79] = res_4_79;
assign resA_o[80] = carry_4_79;
assign resB_o[80] = res_4_80;
assign resA_o[81] = carry_4_80;
assign resB_o[81] = res_4_81;
assign resA_o[82] = carry_4_81;
assign resB_o[82] = res_4_82;
assign resA_o[83] = carry_4_82;
assign resB_o[83] = res_4_83;
assign resA_o[84] = carry_4_83;
assign resB_o[84] = res_4_84;
assign resA_o[85] = carry_4_84;
assign resB_o[85] = res_4_85;
assign resA_o[86] = carry_4_85;
assign resB_o[86] = res_4_86;
assign resA_o[87] = pps_i[10][65];
assign resB_o[87] = carry_4_86;
assign resA_o[88] = pps_i[10][66];
assign resB_o[88] = '0;
endmodule


module bsg_booth_selector_radix4_first #(
  parameter integer width_p = 64
)(
  input [2:0] i,
  input sign_i,
  input [width_p-1:0] x1_i
  ,output [width_p+3:0] a_o
  ,output [width_p+3:0] b_o
);

logic [width_p:0] sel_case;
always_comb unique case(i[0:0])
  0: sel_case = '0;
  1: sel_case = {{1{sign_i}}, x1_i};
  default: sel_case = '0;
endcase
wire [width_p:0] sel_max = i[1] ?
        {x1_i, 1'b0} : sel_case;
wire [width_p:0] sel_sign = i[2] ? ~sel_max : sel_max;
wire e = (sign_i && (i[1:0] != '0)) ^ i[2];
assign a_o = {~e, e, e, sel_sign};
assign b_o = '0;

endmodule

module bsg_booth_selector_64_radix4 (
  input [2:0] i,
  input sign_i,
  input [63:0] x1_i,
  output [66:0] o
);

logic [64:0] sel_case;
always_comb unique case(i[0:0])
  0: sel_case = '0;
  1: sel_case = {{1{sign_i}}, x1_i};
  default: sel_case = '0;
endcase
wire [64:0] sel_max = i[1] ?
        {x1_i, 1'b0} : sel_case;
wire [64:0] sel_sign = i[2] ? ~sel_max : sel_max;
wire e = (sign_i && (i[1:0] != '0)) ^ i[2];
assign o = {1'd1, ~e, sel_sign};
endmodule
