
import sys

num_rows_p = int(sys.argv[1])
num_cols_p = int(sys.argv[2])
num_dly_p  = int(sys.argv[3])

num_els_p = num_rows_p*num_cols_p

print(f"""
// ## AUTOGENERATED; DO NOT MODIFY
// ## num_rows_p = {num_rows_p}
// ## num_cols_p = {num_cols_p}
// ## num_dly_p = {num_dly_p}
""")

print(f"""
module bsg_rp_clk_gen_osc_v3_row
 (input    async_reset_neg_i
  , input  async_set_neg_i
  , input  clkgate_i
  , input  clkdly_i
  , input  clkfb_i
  , input  ctl_i
  , output clk_o
  );

  wire ctl_r;
  SC7P5T_DFFRSQX1_SSC14SL D0(.Q(ctl_r), .CLK(clkgate_i), .D(ctl_i), .RESET(async_reset_neg_i), .SET(async_set_neg_i));

  wire ctl_en;
  SC7P5T_CKND2X1_SSC14SL N0 (.Z(ctl_en), .CLK(clkdly_i), .EN(ctl_r));

  wire lobit;
  SC7P5T_TIELOX2_SSC14SL T0 (.Z(lobit));
  wire hibit;
  SC7P5T_TIEHIX2_SSC14SL T1 (.Z(hibit));

  wire fb;
  SC7P5T_CKND2X1_SSC14SL N1 (.Z(fb), .CLK(clkfb_i), .EN(hibit));
  wire clk;
  SC7P5T_CKND2X1_SSC14SL N2 (.Z(clk), .CLK(fb), .EN(ctl_en));

  assign
`ifdef BSG_RP_CLK_GEN_SIM_DELAY
    #`BSG_RP_CLK_GEN_SIM_DELAY
`endif
  clk_o = clk;

endmodule
""")

print(f"""
module bsg_rp_clk_gen_osc_v3_col
  (input async_reset_i
   , input clkgate_i
   , input clkdly_i
   , input clkfb_i
   , input [{num_rows_p-1}:0] ctl_one_hot_i
   , output clk_o
   );

  wire lobit;
  SC7P5T_TIELOX2_SSC14SL T0 (.Z(lobit));
  wire hibit;
  SC7P5T_TIEHIX2_SSC14SL T1 (.Z(hibit));

  // Size to 1/4 of column load
  wire clkgate_inv;
  SC7P5T_CKINVX2_SSC14SL I0 (.Z(clkgate_inv), .CLK(clkgate_i));
  wire clkdly_inv;
  SC7P5T_CKINVX2_SSC14SL I1 (.Z(clkdly_inv), .CLK(clkdly_i));

  wire async_reset_neg;
  SC7P5T_INVX1_SSC14SL I2 (.Z(async_reset_neg), .A(async_reset_i));

  wire [{num_rows_p}:0] clkfb;
  SC7P5T_CKBUFX1_SSC14SL B0 (.Z(clkfb[0]), .CLK(clkfb_i));

  wire [{num_rows_p-1}:0] async_reset_neg_li, async_set_neg_li;
""")

for i in range(0, num_rows_p):
   if i == 0:
     print(f"""
       assign async_reset_neg_li[{i}] = hibit;
       assign async_set_neg_li[{i}]   = async_reset_neg;
     """)
   else:
     print(f"""
       assign async_reset_neg_li[{i}] = async_reset_neg;
       assign async_set_neg_li[{i}]   = hibit;
     """)

   print(f"""
       bsg_rp_clk_gen_osc_v3_row row_{i}
         (.async_reset_neg_i(async_reset_neg_li[{i}])
          ,.async_set_neg_i(async_set_neg_li[{i}])
          ,.clkgate_i(clkgate_inv)
          ,.clkdly_i(clkdly_inv)
          ,.clkfb_i(clkfb[{i}])
          ,.ctl_i(ctl_one_hot_i[{i}])
          ,.clk_o(clkfb[{i+1}])
          );
""")

print(f"""
  assign clk_o = clkfb[{num_rows_p}];

endmodule
""")


