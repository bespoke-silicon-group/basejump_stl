import sys

num_rows_p = int(sys.argv[1])
num_cols_p = int(sys.argv[2])
num_dly_p  = int(sys.argv[3])

num_taps_p = num_rows_p*num_cols_p

print(f"""
// ## AUTOGENERATED; DO NOT MODIFY
// ## num_rows_p = {num_rows_p}
// ## num_cols_p = {num_cols_p}
// ## num_dly_p = {num_dly_p}
""")

print(f"""
module bsg_rp_clk_gen_osc_v3
  (input async_reset_i
   , input trigger_i
   , input [{num_cols_p*num_rows_p-1}:0] ctl_one_hot_i
   , output clk_o
   );

  wire lobit;
  SC7P5T_TIELOX2_SSC14SL T0 (.Z(lobit));
  wire hibit;
  SC7P5T_TIEHIX2_SSC14SL T1 (.Z(hibit));
  wire async_reset_neg;
  SC7P5T_INVX1_SSC14SL I0 (.Z(async_reset_neg), .A(async_reset_i));
  wire fb_inv, fb, fb_dly, fb_rst;
  SC7P5T_CKINVX1_SSC14SL I1 (.Z(fb_inv), .CLK(fb));
  SC7P5T_CKND2X1_SSC14SL N0 (.Z(fb_rst), .CLK(fb_inv), .EN(async_reset_neg));
  // TODO: Balance delay
  SC7P5T_CKBUFX4_SSC14SL B0_BSG_DISABLE_TIMING (.Z(fb_dly), .CLK(fb_rst));
  SC7P5T_CKINVX4_SSC14SL I2 (.Z(clk_o), .CLK(fb_dly));
  wire fb_gate;
  SC7P5T_CKINVX4_SSC14SL I3 (.Z(fb_gate), .I(fb_dly));
  wire gate_en_sync_1_r, gate_en_sync_2_r;
  // hardened synchronizer
  SC7P5T_SYNC2SDFFRQX1_SSC14SL SS1 (.Q(gate_en_sync_2_r), .CLK(fb_gate), .D(trigger_i), .RESET(async_reset_neg), .SE(lobit), .SI(lobit));
  // Size to 1/4 of number of taps
  wire fb_pregate, fb_gated;
  // TODO: Verify ICG logic
  SC7P5T_CKGPRELATNX4_SSC14SL CGL0 (.Z(fb_pregate), .CLK(fb_gate), .E(gate_en_sync_2_r), .TE(lobit));
  SC7P5T_CKAN2X1_SSC14SL CG0 (.Z(fb_gated), .CLK(fb_gate), .EN(fb_pregate));

  wire [{num_cols_p}:0] fb_col;
  assign fb_col[0] = lobit;
""")
for i in range(0, num_cols_p):
    print(f"""
      bsg_rp_clk_gen_osc_v3_col col_{i}
       (.async_reset_i(async_reset_i)
        ,.clkgate_i(fb_gated)
        ,.clkdly_i(fb_dly)
        ,.clkfb_i(fb_col[{i}])
        ,.ctl_one_hot_i(ctl_one_hot_i[{(i+1)*num_rows_p-1}:{i*num_rows_p}])
        ,.clk_o(fb_col[{i+1}])
        );
""")
print("""
  assign fb = fb_col[{num_cols_p}];
endmodule
""".format(num_cols_p=num_cols_p))

