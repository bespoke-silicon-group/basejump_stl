from __future__ import print_function
import sys

num_rows_p = int(sys.argv[1])
num_cols_p = int(sys.argv[2])
num_dly_p  = int(sys.argv[3])

num_els_p = num_rows_p*num_cols_p

print("""
// ## AUTOGENERATED; DO NOT MODIFY
// ## num_rows_p = {num_rows_p}
// ## num_cols_p = {num_cols_p}
// ## num_dly_p = {num_dly_p}
""".format(num_rows_p=num_rows_p, num_cols_p=num_cols_p, num_dly_p=num_dly_p))

print("""
  module bsg_rp_dly_line_ctl_reg
    (input clk_i
     , input async_reset_neg
     , input async_set_neg
     , input shift_right
     , input shift_left
     , input counter_en
     , input ctl_m1
     , input ctl_p1
     , output ctl_o
     );

    wire set_left, set_right, set;
    wire ctl_n, ctl_r;

    sky130_fd_sc_hd__and2_1 A0 (.A(shift_right), .B(ctl_m1), .X(set_right));
    sky130_fd_sc_hd__and2_1 A1 (.A(shift_left), .B(ctl_p1), .X(set_left));
    sky130_fd_sc_hd__or2_1 O0 (.A(set_left), .B(set_right), .X(set));
    sky130_fd_sc_hd__mux2_1 M0 (.X(ctl_n), .S(counter_en), .A0(ctl_r), .A1(set));
    sky130_fd_sc_hd__dfbbp_1 D0 (.Q(ctl_r), .Q_N(), .CLK(clk_i), .D(ctl_n), .RESET_B(async_reset_neg), .SET_B(async_set_neg));

    assign ctl_o = ctl_r;

endmodule

""")

print("""
  module bsg_rp_dly_line_unit_v3
      (input async_reset_i
      , input trigger_i
      , input [{ctl_width_p_m1}:0] ctl_one_hot_i
      , input  clk_i
      , output clk_o
      );
      wire lobit, hibit;
      sky130_fd_sc_hd__conb_1 T0 (.HI(hibit), .LO(lobit));
  """.format(ctl_width_p_m1=num_cols_p*num_rows_p-1, num_dly_p=num_dly_p))
print("""
  wire fb_inv;
  sky130_fd_sc_hd__clkinv_1 I0 (.Y(fb_inv), .A(clk_i));
  wire gate_en_sync_1_r, gate_en_sync_2_r;
  sky130_fd_sc_hd__dfxtp_1 S1 (.D(trigger_i), .CLK(clk_i), .Q(gate_en_sync_1_r));
  sky130_fd_sc_hd__dfxtp_1 S2 (.D(gate_en_sync_1_r), .CLK(clk_i), .Q(gate_en_sync_2_r));
  wire fb_gated;
  sky130_fd_sc_hd__dlclkp_1 CG0 (.GCLK(fb_gated), .CLK(clk_i), .GATE(gate_en_sync_2_r));
  wire [{num_cols_p}:0] fb_col;
  assign fb_col[0] = 1'b0;
""".format(num_rows_p=num_rows_p, num_cols_p=num_cols_p, num_dly_p=num_dly_p, num_rows_p_m1=num_rows_p-1))
for i in range(0, num_cols_p):
    print("""
      bsg_rp_clk_gen_osc_v3_col col_{i}_BSG_DONT_TOUCH
       (.async_reset_i(async_reset_i)
        ,.clkgate_i(fb_gated)
        ,.clkdly_i(fb_inv)
        ,.clkfb_i(fb_col[{i}])
        ,.ctl_one_hot_i(ctl_one_hot_i[{ip1_num_rows_p}:{i_num_rows_p}])
        ,.clk_o(fb_col[{ip1}])
        );
""".format(num_rows_p=num_rows_p, num_cols_p=num_cols_p, i=i, ip1=i+1, i_num_rows_p=i*num_rows_p, ip1_num_rows_p=(i+1)*num_rows_p-1, num_rows_p_m1=num_rows_p-1))
print("""
  sky130_fd_sc_hd__clkbuf_1 B0 (.X(clk_o), .A(fb_col[{num_cols_p}]));
endmodule
""".format(num_cols_p=num_cols_p))
print("""
  module bsg_rp_dly_line_v3
   (input async_reset_i
    , input clk_i
    , output clk_o
    );

  wire lobit, hibit;
  sky130_fd_sc_hd__conb_1 T0 (.HI(hibit), .LO(lobit));
  wire async_reset_neg;
  sky130_fd_sc_hd__inv_1 I0 (.Y(async_reset_neg), .A(async_reset_i));
  // State machine
  // Trigger off
  wire trigger_off, trigger_on;
  sky130_fd_sc_hd__dfstp_1 D0 (.Q(trigger_off), .CLK(clk_i), .D(trigger_on), .SET_B(async_reset_neg));
  // Change counter
  wire counter_en;
  sky130_fd_sc_hd__dfrtp_1 D1 (.Q(counter_en), .CLK(clk_i), .D(trigger_off), .RESET_B(async_reset_neg));
  // Pause
  wire pause;
  sky130_fd_sc_hd__dfrtp_1 D2 (.Q(pause), .CLK(clk_i), .D(counter_en), .RESET_B(async_reset_neg));
  // Trigger on
  sky130_fd_sc_hd__dfrtp_1 D3 (.Q(trigger_on), .CLK(clk_i), .D(pause), .RESET_B(async_reset_neg));
  wire [{num_els_p}-1:0] ctl_n, ctl_r;
  wire clk_90;
  bsg_rp_dly_line_unit_v3 d90_BSG_DONT_TOUCH
   (.async_reset_i(async_reset_i)
    ,.trigger_i(trigger_on)
    ,.ctl_one_hot_i(ctl_r[{num_els_m1}:0])
    ,.clk_i(clk_i)
    ,.clk_o(clk_90)
    );
  wire clk_180;
  bsg_rp_dly_line_unit_v3 d180_BSG_DONT_TOUCH
   (.async_reset_i(async_reset_i)
    ,.trigger_i(trigger_on)
    ,.ctl_one_hot_i(ctl_r[{num_els_m1}:0])
    ,.clk_i(clk_90)
    ,.clk_o(clk_180)
    );
  wire [{num_dly_p}:0] n;
  assign n[0] = clk_180;
""".format(num_els_p=num_els_p, num_els_m1=(num_els_p-1), num_dly_p=num_dly_p))

for i in range(num_dly_p):
  print("""
    sky130_fd_sc_hd__clkbuf_1 B{i} (.X(n[{ip1}]), .A(n[{i}]));
""".format(i=i, ip1=i+1))

print("""
  // Synthesize as blackbox
  wire clk_dly;
  bsg_nonsynth_delay_line #(.width_p(1), .delay_p(10)) clk_dly_BSG_DONT_TOUCH (.o(clk_dly), .i(n[{num_dly_p}]));
  wire meta;
  sky130_fd_sc_hd__dfrtn_1 meta_r (.Q(meta), .CLK_N(clk_i), .RESET_B(async_reset_neg), .D(clk_dly));
  wire meta_sync, meta_sync_sync, meta_sync_sync_inv;
  sky130_fd_sc_hd__dfrbp_1 bsg_SYNC_1_r (.Q(meta_sync), .Q_N(), .CLK(clk_i), .D(meta), .RESET_B(async_reset_neg));
  sky130_fd_sc_hd__dfrbp_1 bsg_SYNC_2_r (.Q(meta_sync_sync), .Q_N(meta_sync_sync_inv), .CLK(clk_i), .D(meta_sync), .RESET_B(async_reset_neg));
  wire shift_left = meta_sync_sync;
  wire shift_right = meta_sync_sync_inv;
  wire [{num_els_p}-1:0] set_right, set_left, set;
""".format(num_els_p=num_els_p, num_els_m1=(num_els_p-1), num_dly_p=num_dly_p))


print("""
    bsg_rp_dly_line_ctl_reg ctl_0
     (.clk_i(clk_i)
      ,.async_reset_neg(async_reset_neg)
      ,.async_set_neg(hibit)
      ,.shift_right(shift_left)
      ,.shift_left(shift_left)
      ,.counter_en(counter_en)

      ,.ctl_m1(ctl_r[0])
      ,.ctl_p1(ctl_r[1])
      ,.ctl_o(ctl_r[0])
      );
""")

for i in range(1, num_els_p-1):
  print("""
    bsg_rp_dly_line_ctl_reg ctl_{i}
     (.clk_i(clk_i)
      ,.async_reset_neg(async_reset_neg)
      ,.async_set_neg(hibit)
      ,.shift_right(shift_right)
      ,.shift_left(shift_left)
      ,.counter_en(counter_en)

      ,.ctl_m1(ctl_r[{im1}])
      ,.ctl_p1(ctl_r[{ip1}])
      ,.ctl_o(ctl_r[{i}])
      );
  """.format(i=i, ip1=(i+1), im1=(i-1)))


print("""
    bsg_rp_dly_line_ctl_reg ctl_{num_els_p_m1}
     (.clk_i(clk_i)
      ,.async_reset_neg(hibit)
      ,.async_set_neg(async_reset_neg)
      ,.shift_right(shift_right)
      ,.shift_left(shift_right)
      ,.counter_en(counter_en)

      ,.ctl_m1(ctl_r[{num_els_p_m2}])
      ,.ctl_p1(ctl_r[{num_els_p_m1}])
      ,.ctl_o(ctl_r[{num_els_p_m1}])
      );
""".format(num_els_p_m1=num_els_p-1, num_els_p_m2=num_els_p-2))

print("""
    assign clk_o = clk_90;

  endmodule
""")
